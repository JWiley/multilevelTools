[{"path":"https://joshuawiley.com/multilevelTools/articles/lmer-vignette.html","id":"a-quick-view-of-the-data","dir":"Articles","previous_headings":"","what":"A Quick View of the Data","title":"Multilevel Models using lmer","text":"Let’s start quick view structure data. example, just work negative affect, NegAff, outcome variable stress, STRESS, predictor. observations repeated per person, also need use variable indicates observations belong person, UserID. code follows shows many unique people observations variable. Finally, might explore variable briefly, jumping analyzing examining diagnostics effects models. Using summary() function variable gives us basic descriptive statistics form five number summary (minimum, first quartile, median (second quartile), third quartile, maximum) well arithmetic mean. NA’s tell us many observations missing negative affect. can see variables quite skewed minimum, first quartile medians close together far away maximum. repeated measures data, another useful descriptive statistic intraclass correlation coefficient ICC. ICC measure proportion variance people versus total variance (.e., variance people variance within persons). multilevelTools provides function, iccMixed() estimate ICCs based mixed effects / multilevel models. following code negative affect stress, first naming arguments using shorter unnamed approach, identical results, easier type. relevant output ICC row named UserID. ICC 1 indicates 100% variance exists people, mean 0% variance exists within person, indicating people identical scores every time assessed. Conversely ICC 0 indicate everyone’s average identical 100% variance exists within person. negative affect stress, can see ICCs fall 0 1, indicating variance people (.e., individuals different average levels negative affect stress) also variance within person, meaning people’s negative affect stress fluctuate vary within person across day 12-days study. Finally, might want examine distribution variables visually. Visual exploration great way identify distribution variables, extreme values, potential issues can difficult identify numerically, bimodal distributions. multilevel data, helpful examine within person aspects variable separately. multilevelTools makes easy using meanDecompose() function. important , example, 11 12 days, someone negative affect score 5, one day score 1, score 1 may extreme value, person even though common rest participants study. meanDecompose() returns list X values different levels, ID residuals, case within person effects. make plots distributions using testDistribution(), defaults testing normal distribution, common default case appropriate linear mixed effects / multilevel models. graphs show density plot black lines, normal distribution dashed blue lines, rug plot showing individual observations fall, x-axis five number summary (minimum, first quartile, median, third quartile, maximum). bottom plot Quantile-Quantile plot rotated horizontal instead diagonal. Black dots / lines indicate extreme values, based expected theoretical distribution, normal (gaussian), specified percentile, .001. details, see help(\"testDistribution\"). person results negative affect show five people relative extreme higher scores. Considering negative affect ranges 1 5, impossible scores, extreme relative rest particular sample. within person level, thousands observations many extreme scores. Based results, may suspect get mixed effects / multilevel model, extreme residual scores dealt (roughly correspond within person results) extreme random effects (roughly correspond person results).   exercise stress shows better within person distribution. Certainly skew perfect normal distribution. However, neither required predictors mixed effects models. extreme values extreme far away rest sample, might feel comfortable proceeding data .","code":"## overall structure str(aces_daily, nchar.max = 30) #> 'data.frame':    6599 obs. of  19 variables: #>  $ UserID            : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ SurveyDay         : Date, format: \"2017-02-24\" \"2017-02-24\" ... #>  $ SurveyInteger     : int  2 3 1 2 3 1 2 3 1 2 ... #>  $ SurveyStartTimec11: num  1.93e-01 4.86e-| __truncated__ ... #>  $ Female            : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Age               : num  21 21 21 21 21 21 21 21 21 21 ... #>  $ BornAUS           : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ SES_1             : num  5 5 5 5 5 5 5 5 5 5 ... #>  $ EDU               : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ SOLs              : num  NA 0 NA NA 6.92 ... #>  $ WASONs            : num  NA 0 NA NA 0 NA NA 1 NA NA ... #>  $ STRESS            : num  5 1 1 2 0 0 3 1 0 3 ... #>  $ SUPPORT           : num  NA 7.02 NA NA 6.15 ... #>  $ PosAff            : num  1.52 1.51 1.56 1.56 1.13 ... #>  $ NegAff            : num  1.67 1 NA 1.36 1 ... #>  $ COPEPrb           : num  NA 2.26 NA NA NA ... #>  $ COPEPrc           : num  NA 2.38 NA NA NA ... #>  $ COPEExp           : num  NA 2.41 NA NA 2.03 ... #>  $ COPEDis           : num  NA 2.18 NA NA NA ... ## how many unique IDs (people) are there? length(unique(aces_daily$UserID)) #> [1] 191  ## how many not missing observations of negative affect are there? sum(!is.na(aces_daily$NegAff)) #> [1] 6389  ## how many not missing observations of stress are there? sum(!is.na(aces_daily$STRESS)) #> [1] 6402 summary(aces_daily$NegAff) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>   1.000   1.029   1.280   1.550   1.813   5.000     210  summary(aces_daily$STRESS) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>   0.000   0.000   1.000   2.328   4.000  10.000     197 iccMixed(   dv = \"NegAff\",   id = \"UserID\",   data = aces_daily) #>         Var     Sigma       ICC #>      <char>     <num>     <num> #> 1:   UserID 0.2100950 0.4374139 #> 2: Residual 0.2702166 0.5625861  iccMixed(\"STRESS\", \"UserID\", aces_daily) #>         Var   Sigma       ICC #>      <char>   <num>     <num> #> 1:   UserID 2.04045 0.3228825 #> 2: Residual 4.27903 0.6771175 tmp <- meanDecompose(NegAff ~ UserID, data = aces_daily) str(tmp, nchar.max = 30) #> List of 2 #>  $ NegAff by UserID  :Classes 'data.table' and 'data.frame': 191 obs. of  2 variables: #>   ..$ UserID: int [1:191] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ X     : num [1:191] 1.75 1.12 1.68 1.79 1.1 ... #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ NegAff by residual:Classes 'data.table' and 'data.frame': 6599 obs. of  1 variable: #>   ..$ X: num [1:6599] -0.0787 -0.7478| __truncated__ ... #>   ..- attr(*, \".internal.selfref\")=<externalptr>  plot(testDistribution(tmp[[\"NegAff by UserID\"]]$X,                       extremevalues = \"theoretical\", ev.perc = .001),      varlab = \"Between Person Negative Affect\") plot(testDistribution(tmp[[\"NegAff by residual\"]]$X,                       extremevalues = \"theoretical\", ev.perc = .001),      varlab = \"Within Person Negative Affect\") tmp <- meanDecompose(STRESS ~ UserID, data = aces_daily)  plot(testDistribution(tmp[[\"STRESS by UserID\"]]$X,                       extremevalues = \"theoretical\", ev.perc = .001),      varlab = \"Between Person STRESS\") plot(testDistribution(tmp[[\"STRESS by residual\"]]$X,                       extremevalues = \"theoretical\", ev.perc = .001),      varlab = \"Within Person STRESS\")"},{"path":"https://joshuawiley.com/multilevelTools/articles/lmer-vignette.html","id":"mixed-effects-multilevel-model","dir":"Articles","previous_headings":"","what":"Mixed Effects (Multilevel) Model","title":"Multilevel Models using lmer","text":"rough sense variables, proceed fitting mixed effects model using lmer() function lme4. use negative affect outcome predicted stress. intercept linear slope stress negative affect included fixed random effects. random effects allowed correlated, , example, people higher negative affect low stress may also flatter slope thye may less room increase negative affect higher stress levels. time writing, model using default optimizer control criteria fails converge (albeit gradient close). convergence warnings can spurious also may suggest either complex model need refine aspect model, scaling predictors changing optimizer arguments optimizer. use lmerControl() function specify different optimization algorithm using Nelder-Mead Method (https://en.wikipedia.org/wiki/Nelder%E2%80%93Mead_method). also tighten tolerance values. passed lmer() setting argument, control = strictControl. converges without warning. Now move examine model diagnostics. linear mixed effects / multilevel models, residuals follow normal distribution, random effects follow multivariate normal distribution, residual variance homogenous () single residual variance estimated used whole model. modelDiagnostics() function multilevelTools helps evaluate assumptions graphically. first plot shows (top left) distribution residuals. somewhat narrow normal distribution (.e., leptokurtic) consequently many residuals tails considered extreme values. However, distribution fairly symmetrical residuals 6,000 observations tend make results relatively robust violations. second plot (top right) shows fitted (predicted) values observation residuals. colour blocks indicates many observations fall particular point. solid blue line loess smooth line. Hopefully line flat stays consistently residuals 0 regardless predicted value, indicating systematic bias. Finally dashed blue lines indicate 10th 90th percentile (estimated quantile regression model) residuals across predicted values. residual variance homogenous across spread predicted values, expect dashed lines flat parallel . approximately true predicted values 1.7. low predicted values, residuals 0 higher spread dashed lines narrowed. people negative affect scores 1 many people reported negative affect around 1. Therefore predicted negative affect scores 1, residuals tend 0. pattern ideal, also indicative terrible violation assumption. Two possible approaches relaxing assumption given data like use censored model, assumes true negative affect scores may lower censored 1 due limitations measurement. Another use location scale mixed effects model models mean (location) also scale (variance) function variables, allow residual variance differ. beyond scope document, however. last three plots show univariate distribution intercept stress slope UserID, random intercept slope test whether random intercept slope multivariate normal multivariate normality test, based mahalonbis distances, suggests , relatively extreme people. might consider dropping individuals analysis examine whether results sensitive extreme cases.  order drop people extreme multivariate normality test, can access data table extreme values modelDiagnostics object. subset include multivariate effects use head() function show first rows. extreme value table shows scores outcome, UserID, index (row) dataset, effect type, multivariate since subset . can use unique() function identify IDs, shows three IDs. can update existing model using update() function data, just subset exclude three extreme IDs. re-run diagnostics plot revealing one new multivariate extreme value.  removing extreme ID plotting diagnostics suggests now random effects fairly “clean”.  Now model whose diagnostics reasonably happy , can examine results. modelPerformance() function multilevelTools package gives fit indices overall model, including measures variance accounted fixed effects (marginal R2) fixed random effects combined (conditional R2). also get information criterion (AIC, BIC), although note REML estimator, log likelihood thus information criterion comparable ML estimator used. see results individual variables, can use summary() function get default model summary. Note summary differs slightly produced lme4 overridden lmerTest adds degrees freedom p-values. default summary gives quite bit key information. However, provide results often desired scientific publication. Confidence intervals commonly reported t values often reported preference p-values. addition, increasingly common ask effect sizes. modelTest() function multilevelTools provides tests, including tests combined fixed + random effect variable effect sizes based independent change marginal conditional R2, used calculate sort cohen’s F2. results available series tables programattic use. However, individual use reporting, caling APAStyler() produce nicely formatted output humans. Confidence intervals added brackets effect sizes bottom listed stress considering fixed + random effects together. output APAStyler() can easily copied pasted Excel Word formatting publication. format desired, changes fairly easy make automatically. example following code uses 3 decimal points, lists exact p-values, uses semi colon instead comma confidence intervals. Finally, APAStyler() can used multiple models create convenient comparison. example, although removed several extreme values, might want compare results full data dataset extreme values removed evaluate whether critical coefficients effect sizes changed much. quantities, like log likelihood, AIC BIC comparable sample size changed. However, effect size estimates like model marginal conditional R2 can reasonably compared can fixed effect coefficients effect sizes particular predictors. create output, pass list modelTest objects can add names nicely named output. results show intercept, predicted negative affect stress zero slightly higher original model outliers removed. fixed effect coefficient stress identical, confidence interval slightly wider removing outliers. Variability random intercept, slope, residual variance, sigma, slightly reduced. , conclude overall pattern results conclusions might drawn functionally change model cases included versus removing extreme values, case. effectively serves “sensitivity analysis” evaluating sensitive results model inclusion / exclusion extreme values. case, sensitive, may encouraging. cases large differences results, careful thought may needed around model likely “true” implications differences interpretting utilizing results.","code":"m <- lmer(NegAff ~ STRESS + (1 + STRESS | UserID),           data = aces_daily) #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : #> Model failed to converge with max|grad| = 0.00201381 (tol = 0.002, component 1) strictControl <- lmerControl(optCtrl = list(    algorithm = \"NLOPT_LN_NELDERMEAD\",    xtol_abs = 1e-12,    ftol_abs = 1e-12))  m <- lmer(NegAff ~ STRESS + (1 + STRESS | UserID),           data = aces_daily, control = strictControl) md <- modelDiagnostics(m, ev.perc = .001)  plot(md, ask = FALSE, ncol = 2, nrow = 3) mvextreme <- subset(md$extremeValues,   EffectType == \"Multivariate Random Effect UserID\")  head(mvextreme) #>      NegAff UserID Index                        EffectType #>       <num>  <int> <int>                            <char> #> 1: 3.861232     56  1929 Multivariate Random Effect UserID #> 2: 2.362821     56  1930 Multivariate Random Effect UserID #> 3: 3.145248     56  1931 Multivariate Random Effect UserID #> 4: 2.574245     56  1932 Multivariate Random Effect UserID #> 5: 1.955497     56  1933 Multivariate Random Effect UserID #> 6: 1.848545     56  1934 Multivariate Random Effect UserID  unique(mvextreme$UserID) #> [1]  56 111 185 m2 <- update(m, data = subset(aces_daily,   UserID %!in% unique(mvextreme$UserID)))  md2 <- modelDiagnostics(m2, ev.perc = .001)  plot(md2, ask = FALSE, ncol = 2, nrow = 3) mvextreme2 <- subset(md2$extremeValues,   EffectType == \"Multivariate Random Effect UserID\")  unique(mvextreme2$UserID) #> [1] 123 m3 <- update(m, data = subset(aces_daily,   UserID %!in% c(unique(mvextreme$UserID), unique(mvextreme2$UserID))))  md3 <- modelDiagnostics(m3, ev.perc = .001)  plot(md3, ask = FALSE, ncol = 2, nrow = 3) modelPerformance(m3) #> $Performance #>     Model Estimator N_Obs     N_Groups      AIC      BIC        LL  LLDF #>    <char>    <char> <num>       <char>    <num>    <num>     <num> <num> #> 1: merMod      REML  6262 UserID (187) 7173.374 7213.827 -3580.687     6 #>        Sigma MarginalR2 ConditionalR2 MarginalF2 ConditionalF2 #>        <num>      <num>         <num>      <num>         <num> #> 1: 0.4070053  0.2428357     0.5173029  0.3207174      1.071693 #>  #> attr(,\"class\") #> [1] \"modelPerformance.merMod\" \"modelPerformance\" summary(m3) #> Linear mixed model fit by REML. t-tests use Satterthwaite's method [ #> lmerModLmerTest] #> Formula: NegAff ~ STRESS + (1 + STRESS | UserID) #>    Data:  #> subset(aces_daily, UserID %!in% c(unique(mvextreme$UserID), unique(mvextreme2$UserID))) #> Control: strictControl #>  #> REML criterion at convergence: 7161.4 #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -5.1249 -0.5156 -0.1579  0.4040  6.4032  #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. Corr #>  UserID   (Intercept) 0.027950 0.16718       #>           STRESS      0.003925 0.06265  0.43 #>  Residual             0.165653 0.40701       #> Number of obs: 6262, groups:  UserID, 187 #>  #> Fixed effects: #>              Estimate Std. Error        df t value Pr(>|t|)     #> (Intercept) 1.217e+00  1.456e-02 1.622e+02   83.64   <2e-16 *** #> STRESS      1.152e-01  5.473e-03 1.854e+02   21.05   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Correlation of Fixed Effects: #>        (Intr) #> STRESS 0.103 mt3 <- modelTest(m3) #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting.  names(mt3) ## list of all tables available #> [1] \"FixedEffects\"  \"RandomEffects\" \"EffectSizes\"   \"OverallModel\"  APAStyler(mt3) #>                              Term                  Est           Type #>                            <char>               <char>         <char> #>  1:                   (Intercept) 1.22*** [1.19, 1.25]  Fixed Effects #>  2:                        STRESS 0.12*** [0.10, 0.13]  Fixed Effects #>  3: cor_STRESS.(Intercept)|UserID                 0.43 Random Effects #>  4:         sd_(Intercept)|UserID                 0.17 Random Effects #>  5:              sd_STRESS|UserID                 0.06 Random Effects #>  6:                         sigma                 0.41 Random Effects #>  7:                      Model DF                    6  Overall Model #>  8:                    N (Groups)         UserID (187)  Overall Model #>  9:              N (Observations)                 6262  Overall Model #> 10:                        logLik             -3573.08  Overall Model #> 11:                           AIC              7158.16  Overall Model #> 12:                           BIC              7198.61  Overall Model #> 13:                   Marginal R2                 0.24  Overall Model #> 14:                   Marginal F2                 0.32  Overall Model #> 15:                Conditional R2                 0.52  Overall Model #> 16:                Conditional F2                 1.07  Overall Model #> 17:       STRESS (Fixed + Random)  0.32/0.24, p < .001   Effect Sizes #> 18:               STRESS (Random) -0.07/0.01, p < .001   Effect Sizes APAStyler(mt3,           format = list(             FixedEffects = \"%s, %s (%s; %s)\",             RandomEffects = c(\"%s\", \"%s (%s, %s)\"),             EffectSizes = \"%s, %s; %s\"),           digits = 3,           pcontrol = list(digits = 3, stars = FALSE,                           includeP = TRUE, includeSign = TRUE,                           dropLeadingZero = TRUE)) #>                              Term                            Est           Type #>                            <char>                         <char>         <char> #>  1:                   (Intercept) 1.217, p < .001 (1.189; 1.246)  Fixed Effects #>  2:                        STRESS 0.115, p < .001 (0.104; 0.126)  Fixed Effects #>  3: cor_STRESS.(Intercept)|UserID                          0.427 Random Effects #>  4:         sd_(Intercept)|UserID                          0.167 Random Effects #>  5:              sd_STRESS|UserID                          0.063 Random Effects #>  6:                         sigma                          0.407 Random Effects #>  7:                      Model DF                              6  Overall Model #>  8:                    N (Groups)                   UserID (187)  Overall Model #>  9:              N (Observations)                           6262  Overall Model #> 10:                        logLik                      -3573.079  Overall Model #> 11:                           AIC                       7158.158  Overall Model #> 12:                           BIC                       7198.611  Overall Model #> 13:                   Marginal R2                          0.243  Overall Model #> 14:                   Marginal F2                          0.322  Overall Model #> 15:                Conditional R2                          0.517  Overall Model #> 16:                Conditional F2                          1.068  Overall Model #> 17:       STRESS (Fixed + Random)         0.322, 0.242; p < .001   Effect Sizes #> 18:               STRESS (Random)        -0.069, 0.005; p < .001   Effect Sizes ## run modelTest() on the original model, m mt <- modelTest(m) #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting.  APAStyler(list(Original = mt, `Outliers Removed` = mt3)) #>                              Term             Original     Outliers Removed #>                            <char>               <char>               <char> #>  1:                   (Intercept) 1.24*** [1.20, 1.27] 1.22*** [1.19, 1.25] #>  2:                        STRESS 0.12*** [0.11, 0.13] 0.12*** [0.10, 0.13] #>  3: cor_STRESS.(Intercept)|UserID                 0.47                 0.43 #>  4:         sd_(Intercept)|UserID                 0.21                 0.17 #>  5:              sd_STRESS|UserID                 0.07                 0.06 #>  6:                         sigma                 0.42                 0.41 #>  7:                      Model DF                    6                    6 #>  8:                    N (Groups)         UserID (191)         UserID (187) #>  9:              N (Observations)                 6389                 6262 #> 10:                        logLik             -3845.41             -3573.08 #> 11:                           AIC              7702.81              7158.16 #> 12:                           BIC              7743.39              7198.61 #> 13:                   Marginal R2                 0.23                 0.24 #> 14:                   Marginal F2                 0.29                 0.32 #> 15:                Conditional R2                 0.55                 0.52 #> 16:                Conditional F2                 1.23                 1.07 #> 17:       STRESS (Fixed + Random)  0.29/0.26, p < .001  0.32/0.24, p < .001 #> 18:               STRESS (Random) -0.06/0.02, p < .001 -0.07/0.01, p < .001 #>               Type #>             <char> #>  1:  Fixed Effects #>  2:  Fixed Effects #>  3: Random Effects #>  4: Random Effects #>  5: Random Effects #>  6: Random Effects #>  7:  Overall Model #>  8:  Overall Model #>  9:  Overall Model #> 10:  Overall Model #> 11:  Overall Model #> 12:  Overall Model #> 13:  Overall Model #> 14:  Overall Model #> 15:  Overall Model #> 16:  Overall Model #> 17:   Effect Sizes #> 18:   Effect Sizes"},{"path":"https://joshuawiley.com/multilevelTools/articles/lmer-vignette.html","id":"interactions","dir":"Articles","previous_headings":"","what":"Interactions","title":"Multilevel Models using lmer","text":"Interactions models generally supported multilevelTools. However, functions, specifically modelTest() work equally well types interactions. modelTest() good support interactions continuous variables. somewhat worse support interactions involving one categorical variables.","code":""},{"path":"https://joshuawiley.com/multilevelTools/articles/lmer-vignette.html","id":"interactions-with-categorical-variables","dir":"Articles","previous_headings":"Interactions","what":"Interactions with Categorical Variable(s)","title":"Multilevel Models using lmer","text":"First let’s take look example categorical variables. start model interactions. fixed effeccts model interactions. interaction model fixed effects Now, suppose decided drop one predictors model. can update model using update() function built R. fixed effeccts model interactions dropping categorical subjective socioeconomic status (SEScat). interaction model fixed effects dropping predictor can see four less fixed effect coefficient. two models called nested, one model (one dropping SEScat) fully nested contained model. essentially modelTest() us automatically compares two models. table follows, compare Log Likelihood (LL) degrees freedom (DF), can see one model 4 fewer degrees freedom , reflecting different number parameters: coefficients SEScat dropped. model comparison results match modelTest() shown following table. Comparing p-value SEScat effect sizes section model comparison. Now let’s look happens interaction. fixed effeccts model interaction involving categorical predictor. interaction model fixed effects Now, suppose decided drop one predictors model. can update model using update() function built R. fixed effects model interaction dropping categorical subjective socioeconomic status (SEScat). interaction model fixed effects dropping predictor can see immediately number fixed effects coefficients. , simple main effects SEScat differed BornAUScat = 1. Now, simple main effects BornAUScat = 0 BornAUScat = 1. happens R’s formula interface decides dummy code create underlying model matrix. tried following code compare two models, get error models nested. models nested within . fact, model, just parameterized differently. example, can seen comparing log likelihoods, . might wanted happened constrained fixed effects SEScat dummy codes 0. , however, tricky obtain. modelTest() tries fail relatively gracefully. run, report test simple main effect overall SEScat. can, however, test whether two-way interaction adds beyond main effects .","code":"d <- as.data.table(aces_daily)[!is.na(SES_1) & !is.na(BornAUS)] d[, SEScat := factor(SES_1)] d[, BornAUScat := factor(BornAUS)]  m.noint <- lmer(PosAff ~ BornAUScat + SEScat + (1 | UserID), data = d) m.nointdrop <- update(m.noint, . ~ . - SEScat) knitr::kable(   t(modelCompare(m.nointdrop, m.noint)$Comparison),   caption = \"model comparison\") #> When using REML, the fixed effects structure must be identical, #> but was different. Refitting with ML. knitr::kable(APAStyler(modelTest(m.noint))) #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting. m.int <- lmer(PosAff ~ BornAUScat * SEScat + (1 | UserID), data = d) m.intdrop <- update(m.int, . ~ . - SEScat) modelCompare(m.intdrop, m.int) logLik(m.int) #> 'log Lik.' -7156.232 (df=12) logLik(m.intdrop) #> 'log Lik.' -7156.232 (df=12) knitr::kable(APAStyler(modelTest(m.int))) #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting. #> The full and reduced model had 12 and 12 parameters, respectively. #> The reduced model should have fewer parameters. #> This usually happens when there are interactions with categorical variables. #> For an explanation, see: #> https://joshuawiley.com/multilevelTools/articles/lmer-vignette.html #> The full and reduced model had 12 and 12 parameters, respectively. #> The reduced model should have fewer parameters. #> This usually happens when there are interactions with categorical variables. #> For an explanation, see: #> https://joshuawiley.com/multilevelTools/articles/lmer-vignette.html"},{"path":"https://joshuawiley.com/multilevelTools/articles/lmer-vignette.html","id":"if-you-really-want","dir":"Articles","previous_headings":"Interactions > Interactions with Categorical Variable(s)","what":"If you really want","title":"Multilevel Models using lmer","text":"really want tests simple main effects categorical predictor? can done manually dummy coding predictors creating two, nested, models compare. Now can compare two models. expected, differ 4 degrees freedom. manual model comparison Incidentally, can still use modelTest() model, modelTest() longer knows SEScat5 8 belong variable, tested individually, get omnibus test. general principle categorical variables, modelTest() support highest order interaction model, none lower order interactions main effects. Thus two-way interaction, two-way interaction can tested simple main effects involved. three-way interaction, three-way interaction can tested simple two-way interactions simiple main effects involved. can tested manually using modelCompare().","code":"## manually dummy code d[, SEScat5 := fifelse(SES_1 == 5, 1, 0)] d[, SEScat6 := fifelse(SES_1 == 6, 1, 0)] d[, SEScat7 := fifelse(SES_1 == 7, 1, 0)] d[, SEScat8 := fifelse(SES_1 == 8, 1, 0)]  ## interaction model m.intman <- lmer(PosAff ~ BornAUS * (SEScat5 + SEScat6 + SEScat7 + SEScat8) +                    (1 | UserID), data = d)  ## drop just the simple main effects of SEScat m.intmandrop <- update(m.intman, . ~ . - SEScat5 - SEScat6 - SEScat7 - SEScat8) knitr::kable(   t(modelCompare(m.intmandrop, m.intman)$Comparison),   caption = \"manual model comparison\") #> When using REML, the fixed effects structure must be identical, #> but was different. Refitting with ML. knitr::kable(APAStyler(modelTest(m.intman))) #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting."},{"path":"https://joshuawiley.com/multilevelTools/articles/lmer-vignette.html","id":"interactions-with-continuous-variables","dir":"Articles","previous_headings":"Interactions","what":"Interactions with Continuous Variables","title":"Multilevel Models using lmer","text":"Continuous interactions pose challenges R can easily remove specific simple components test whether differ zero.","code":"m.cint <- lmer(PosAff ~ STRESS * NegAff + (1 | UserID), data = aces_daily)  knitr::kable(APAStyler(modelTest(m.cint))) #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting."},{"path":"https://joshuawiley.com/multilevelTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua F. Wiley. Author, maintainer.","code":""},{"path":"https://joshuawiley.com/multilevelTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wiley J (2025). multilevelTools: Multilevel Mixed Effects Model Diagnostics Effect Sizes. R package version 0.2.0, https://joshuawiley.com/multilevelTools/.","code":"@Manual{,   title = {multilevelTools: Multilevel and Mixed Effects Model Diagnostics and Effect Sizes},   author = {Joshua F. Wiley},   year = {2025},   note = {R package version 0.2.0},   url = {https://joshuawiley.com/multilevelTools/}, }"},{"path":"https://joshuawiley.com/multilevelTools/index.html","id":"multileveltools","dir":"","previous_headings":"","what":"multilevelTools","title":"multilevelTools","text":"Effect sizes, diagnostics performance metrics multilevel mixed effects models. Includes marginal conditional R2 estimates linear mixed effects models based Johnson 2014. vignette shows complete example.","code":""},{"path":"https://joshuawiley.com/multilevelTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"multilevelTools","text":"get version CRAN: get latest development version, use:","code":"install.packages(\"multilevelTools\") #install.packages(\"devtools\") devtools::install_github(\"JWiley/multilevelTools\")"},{"path":"https://joshuawiley.com/multilevelTools/reference/APAStyler.modelTest.merMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Format results from a linear mixed model — APAStyler.modelTest.merMod","title":"Format results from a linear mixed model — APAStyler.modelTest.merMod","text":"Format results linear mixed model","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/APAStyler.modelTest.merMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format results from a linear mixed model — APAStyler.modelTest.merMod","text":"","code":"# S3 method for class 'modelTest.merMod' APAStyler(   object,   format = list(FixedEffects = c(\"%s%s [%s, %s]\"), RandomEffects = c(\"%s\",     \"%s [%s, %s]\"), EffectSizes = c(\"%s/%s, %s\")),   digits = 2,   pcontrol = list(digits = 3, stars = TRUE, includeP = FALSE, includeSign = FALSE,     dropLeadingZero = TRUE),   ... )"},{"path":"https://joshuawiley.com/multilevelTools/reference/APAStyler.modelTest.merMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format results from a linear mixed model — APAStyler.modelTest.merMod","text":"object list one () models estimated lmer format list giving formatting style used fixed effecvts, random effects, effect sizes. random effects, must two options, one random effects confidence intervals one random effects confidence intervals. digits numeric value indicating number digits print. still early implementation stages currently change parts output (default 2 decimals per APA style). pcontrol list controlling p values formatted. ... Additional arguments passed confint. Notably nsim boot.type bootstrap method used.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/APAStyler.modelTest.merMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format results from a linear mixed model — APAStyler.modelTest.merMod","text":"data table character data","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/APAStyler.modelTest.merMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format results from a linear mixed model — APAStyler.modelTest.merMod","text":"","code":"library(JWileymisc) data(sleepstudy, package = \"lme4\")  m1 <- lme4::lmer(Reaction ~ Days + (1 + Days | Subject),   data = sleepstudy) m2 <- lme4::lmer(Reaction ~ Days + I(Days^2) + (1 + Days | Subject),   data = sleepstudy)  testm1 <- modelTest(m1) #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting. testm2 <- modelTest(m2) #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting.  APAStyler(testm1) #>                             Term                        Est           Type #>                           <char>                     <char>         <char> #>  1:                  (Intercept) 251.41*** [238.03, 264.78]  Fixed Effects #>  2:                         Days  10.47*** [  7.44,  13.50]  Fixed Effects #>  3: cor_Days.(Intercept)|Subject                       0.07 Random Effects #>  4:       sd_(Intercept)|Subject                      24.74 Random Effects #>  5:              sd_Days|Subject                       5.92 Random Effects #>  6:                        sigma                      25.59 Random Effects #>  7:                     Model DF                          6  Overall Model #>  8:                   N (Groups)               Subject (18)  Overall Model #>  9:             N (Observations)                        180  Overall Model #> 10:                       logLik                    -875.97  Overall Model #> 11:                          AIC                    1763.94  Overall Model #> 12:                          BIC                    1783.10  Overall Model #> 13:                  Marginal R2                       0.29  Overall Model #> 14:                  Marginal F2                       0.40  Overall Model #> 15:               Conditional R2                       0.79  Overall Model #> 16:               Conditional F2                       3.82  Overall Model #> 17:        Days (Fixed + Random)        0.40/1.99, p < .001   Effect Sizes #> 18:                Days (Random)        0.00/0.46, p < .001   Effect Sizes APAStyler(list(Linear = testm1, Quadratic = testm2)) #>                             Term                     Linear #>                           <char>                     <char> #>  1:                  (Intercept) 251.41*** [238.03, 264.78] #>  2:                         Days  10.47*** [  7.44,  13.50] #>  3:                    I(Days^2)                            #>  4: cor_Days.(Intercept)|Subject                       0.07 #>  5:       sd_(Intercept)|Subject                      24.74 #>  6:              sd_Days|Subject                       5.92 #>  7:                        sigma                      25.59 #>  8:                     Model DF                          6 #>  9:                   N (Groups)               Subject (18) #> 10:             N (Observations)                        180 #> 11:                       logLik                    -875.97 #> 12:                          AIC                    1763.94 #> 13:                          BIC                    1783.10 #> 14:                  Marginal R2                       0.29 #> 15:                  Marginal F2                       0.40 #> 16:               Conditional R2                       0.79 #> 17:               Conditional F2                       3.82 #> 18:        Days (Fixed + Random)        0.40/1.99, p < .001 #> 19:                Days (Random)        0.00/0.46, p < .001 #> 20:            I(Days^2) (Fixed)                            #>                             Term                     Linear #>                      Quadratic           Type #>                         <char>         <char> #>  1: 255.45*** [240.72, 270.18]  Fixed Effects #>  2:    7.43** [  1.91,  12.96]  Fixed Effects #>  3:      0.34 [ -0.18,   0.85]  Fixed Effects #>  4:                       0.06 Random Effects #>  5:                      24.76 Random Effects #>  6:                       5.93 Random Effects #>  7:                      25.53 Random Effects #>  8:                          7  Overall Model #>  9:               Subject (18)  Overall Model #> 10:                        180  Overall Model #> 11:                    -875.14  Overall Model #> 12:                    1764.28  Overall Model #> 13:                    1786.63  Overall Model #> 14:                       0.29  Overall Model #> 15:                       0.41  Overall Model #> 16:                       0.79  Overall Model #> 17:                       3.87  Overall Model #> 18:        0.01/0.52, p < .001   Effect Sizes #> 19:        0.00/0.46, p < .001   Effect Sizes #> 20:        0.00/0.01, p = .198   Effect Sizes #>                      Quadratic           Type APAStyler(testm1,   format = list(     FixedEffects = \"%s, %s (%s, %s)\",     RandomEffects = c(\"%s\", \"%s (%s, %s)\"),     EffectSizes = \"%s, %s; %s\"),   pcontrol = list(digits = 3, stars = FALSE,                   includeP = TRUE, includeSign = TRUE,                   dropLeadingZero = TRUE)) #>                             Term                               Est #>                           <char>                            <char> #>  1:                  (Intercept) 251.41, p < .001 (238.03, 264.78) #>  2:                         Days  10.47, p < .001 (  7.44,  13.50) #>  3: cor_Days.(Intercept)|Subject                              0.07 #>  4:       sd_(Intercept)|Subject                             24.74 #>  5:              sd_Days|Subject                              5.92 #>  6:                        sigma                             25.59 #>  7:                     Model DF                                 6 #>  8:                   N (Groups)                      Subject (18) #>  9:             N (Observations)                               180 #> 10:                       logLik                           -875.97 #> 11:                          AIC                           1763.94 #> 12:                          BIC                           1783.10 #> 13:                  Marginal R2                              0.29 #> 14:                  Marginal F2                              0.40 #> 15:               Conditional R2                              0.79 #> 16:               Conditional F2                              3.82 #> 17:        Days (Fixed + Random)              0.40, 1.99; p < .001 #> 18:                Days (Random)              0.00, 0.46; p < .001 #>               Type #>             <char> #>  1:  Fixed Effects #>  2:  Fixed Effects #>  3: Random Effects #>  4: Random Effects #>  5: Random Effects #>  6: Random Effects #>  7:  Overall Model #>  8:  Overall Model #>  9:  Overall Model #> 10:  Overall Model #> 11:  Overall Model #> 12:  Overall Model #> 13:  Overall Model #> 14:  Overall Model #> 15:  Overall Model #> 16:  Overall Model #> 17:   Effect Sizes #> 18:   Effect Sizes  # \\donttest{  testm1 <- modelTest(m1, method = \"profile\") #> Computing profile confidence intervals ... #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting. testm2 <- modelTest(m2, method = \"profile\") #> Computing profile confidence intervals ... #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting.  APAStyler(testm1) #>                             Term                        Est           Type #>                           <char>                     <char>         <char> #>  1:                  (Intercept) 251.41*** [237.68, 265.13]  Fixed Effects #>  2:                         Days  10.47*** [  7.36,  13.58]  Fixed Effects #>  3: cor_Days.(Intercept)|Subject        0.07 [-0.48,  0.68] Random Effects #>  4:       sd_(Intercept)|Subject       24.74 [14.38, 37.72] Random Effects #>  5:              sd_Days|Subject        5.92 [ 3.80,  8.75] Random Effects #>  6:                        sigma       25.59 [22.90, 28.86] Random Effects #>  7:                     Model DF                          6  Overall Model #>  8:                   N (Groups)               Subject (18)  Overall Model #>  9:             N (Observations)                        180  Overall Model #> 10:                       logLik                    -875.97  Overall Model #> 11:                          AIC                    1763.94  Overall Model #> 12:                          BIC                    1783.10  Overall Model #> 13:                  Marginal R2                       0.29  Overall Model #> 14:                  Marginal F2                       0.40  Overall Model #> 15:               Conditional R2                       0.79  Overall Model #> 16:               Conditional F2                       3.82  Overall Model #> 17:        Days (Fixed + Random)        0.40/1.99, p < .001   Effect Sizes #> 18:                Days (Random)        0.00/0.46, p < .001   Effect Sizes APAStyler(list(Linear = testm1, Quadratic = testm2)) #>                             Term                     Linear #>                           <char>                     <char> #>  1:                  (Intercept) 251.41*** [237.68, 265.13] #>  2:                         Days  10.47*** [  7.36,  13.58] #>  3:                    I(Days^2)                            #>  4: cor_Days.(Intercept)|Subject        0.07 [-0.48,  0.68] #>  5:       sd_(Intercept)|Subject       24.74 [14.38, 37.72] #>  6:              sd_Days|Subject        5.92 [ 3.80,  8.75] #>  7:                        sigma       25.59 [22.90, 28.86] #>  8:                     Model DF                          6 #>  9:                   N (Groups)               Subject (18) #> 10:             N (Observations)                        180 #> 11:                       logLik                    -875.97 #> 12:                          AIC                    1763.94 #> 13:                          BIC                    1783.10 #> 14:                  Marginal R2                       0.29 #> 15:                  Marginal F2                       0.40 #> 16:               Conditional R2                       0.79 #> 17:               Conditional F2                       3.82 #> 18:        Days (Fixed + Random)        0.40/1.99, p < .001 #> 19:                Days (Random)        0.00/0.46, p < .001 #> 20:            I(Days^2) (Fixed)                            #>                             Term                     Linear #>                      Quadratic           Type #>                         <char>         <char> #>  1: 255.45*** [240.52, 270.38]  Fixed Effects #>  2:    7.43** [  1.93,  12.94]  Fixed Effects #>  3:      0.34 [ -0.18,   0.85]  Fixed Effects #>  4:        0.06 [-0.48,  0.68] Random Effects #>  5:       24.76 [14.48, 37.75] Random Effects #>  6:        5.93 [ 3.81,  8.76] Random Effects #>  7:       25.53 [22.77, 28.69] Random Effects #>  8:                          7  Overall Model #>  9:               Subject (18)  Overall Model #> 10:                        180  Overall Model #> 11:                    -875.14  Overall Model #> 12:                    1764.28  Overall Model #> 13:                    1786.63  Overall Model #> 14:                       0.29  Overall Model #> 15:                       0.41  Overall Model #> 16:                       0.79  Overall Model #> 17:                       3.87  Overall Model #> 18:        0.01/0.52, p < .001   Effect Sizes #> 19:        0.00/0.46, p < .001   Effect Sizes #> 20:        0.00/0.01, p = .198   Effect Sizes #>                      Quadratic           Type APAStyler(testm1,   format = list(     FixedEffects = \"%s, %s (%s, %s)\",     RandomEffects = c(\"%s\", \"%s (%s, %s)\"),     EffectSizes = \"%s, %s; %s\"),   pcontrol = list(digits = 3, stars = FALSE,                   includeP = TRUE, includeSign = TRUE,                   dropLeadingZero = TRUE)) #>                             Term                               Est #>                           <char>                            <char> #>  1:                  (Intercept) 251.41, p < .001 (237.68, 265.13) #>  2:                         Days  10.47, p < .001 (  7.36,  13.58) #>  3: cor_Days.(Intercept)|Subject               0.07 (-0.48,  0.68) #>  4:       sd_(Intercept)|Subject              24.74 (14.38, 37.72) #>  5:              sd_Days|Subject               5.92 ( 3.80,  8.75) #>  6:                        sigma              25.59 (22.90, 28.86) #>  7:                     Model DF                                 6 #>  8:                   N (Groups)                      Subject (18) #>  9:             N (Observations)                               180 #> 10:                       logLik                           -875.97 #> 11:                          AIC                           1763.94 #> 12:                          BIC                           1783.10 #> 13:                  Marginal R2                              0.29 #> 14:                  Marginal F2                              0.40 #> 15:               Conditional R2                              0.79 #> 16:               Conditional F2                              3.82 #> 17:        Days (Fixed + Random)              0.40, 1.99; p < .001 #> 18:                Days (Random)              0.00, 0.46; p < .001 #>               Type #>             <char> #>  1:  Fixed Effects #>  2:  Fixed Effects #>  3: Random Effects #>  4: Random Effects #>  5: Random Effects #>  6: Random Effects #>  7:  Overall Model #>  8:  Overall Model #>  9:  Overall Model #> 10:  Overall Model #> 11:  Overall Model #> 12:  Overall Model #> 13:  Overall Model #> 14:  Overall Model #> 15:  Overall Model #> 16:  Overall Model #> 17:   Effect Sizes #> 18:   Effect Sizes  # }  rm(m1, m2, testm1, testm2)"},{"path":"https://joshuawiley.com/multilevelTools/reference/R2.merMod.html","id":null,"dir":"Reference","previous_headings":"","what":"merMod method for R2 — R2.merMod","title":"merMod method for R2 — R2.merMod","text":"pseudo R2 cluster, squared correlation observed predicted values cluster unit returned.  overall model, marginal conditional R2 calculated described references.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/R2.merMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merMod method for R2 — R2.merMod","text":"","code":"# S3 method for class 'merMod' R2(object, cluster = FALSE, ...)"},{"path":"https://joshuawiley.com/multilevelTools/reference/R2.merMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merMod method for R2 — R2.merMod","text":"object model estimated lmer. cluster logical whether calculate individual pseudo R2 values cluster unit (TRUE) marginal conditional R2 overall model (FALSE, default). ... Added consistency generic. currently used.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/R2.merMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merMod method for R2 — R2.merMod","text":"named vector marginal conditional R2 values,   CLUSTER = FALSE, otherwise, data table pseudo R2   cluster unit.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/R2.merMod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"merMod method for R2 — R2.merMod","text":"estimating marginal conditional R-squared values,   see:   Nakagawa, S. Schielzeth, H. (2013) <doi:10.1111/j.2041-210x.2012.00261.x>   \"general simple method obtaining R2 generalized linear mixed-effects models\"   also:   Johnson, P. C. (2014) <doi:10.1111/2041-210X.12225>   \"Extension Nakagawa & Schielzeth's R2GLMM random slopes models\"","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/R2.merMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merMod method for R2 — R2.merMod","text":"","code":"library(JWileymisc) data(aces_daily, package = \"JWileymisc\") m1 <- lme4::lmer(PosAff ~ STRESS + (1 + STRESS | UserID),   data = aces_daily)  R2(m1) #>    MarginalR2 ConditionalR2  #>     0.1480118     0.6381639  R2(m1, cluster = TRUE) #>         ID IDVariable           R2 #>      <int>     <char>        <num> #>   1:     1     UserID 0.0008365004 #>   2:     2     UserID 0.4615574606 #>   3:     3     UserID 0.0125102870 #>   4:     4     UserID 0.1506410069 #>   5:     5     UserID 0.0133703907 #>  ---                               #> 187:   187     UserID 0.0017950558 #> 188:   188     UserID 0.3319884249 #> 189:   189     UserID 0.0800763116 #> 190:   190     UserID 0.3956990376 #> 191:   191     UserID 0.0226941915  hist(R2(m1, cluster = TRUE)$R2)   rm(m1)"},{"path":"https://joshuawiley.com/multilevelTools/reference/acfByID.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the autocorrelation by unit (ID) — acfByID","title":"Estimate the autocorrelation by unit (ID) — acfByID","text":"function estimates autocorrelation time time series higher level unit, given ID.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/acfByID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the autocorrelation by unit (ID) — acfByID","text":"","code":"acfByID(   xvar,   timevar,   idvar,   data,   lag.max = 10L,   na.function = c(\"na.approx\", \"na.spline\", \"na.locf\"),   ... )"},{"path":"https://joshuawiley.com/multilevelTools/reference/acfByID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the autocorrelation by unit (ID) — acfByID","text":"xvar character string giving variable name variable calculate autocorrelations . timevar character string giving variable name time variable. idvar character string giving variable name ID variable.  Can missing one time series provided, case one created. data data.table containing variables used formula.  required argument. data.frame, silently coerce data.table. data.table data.frame, attempt coerce, message. lag.max integer maximum lag estimate. Must equal greater number observations IDs dataset. na.function character string giving name function use address missing data.  Functions come zoo package, must one : “na.approx”, “na.spline”, “na.locf”. ... Additional arguments passed zoo.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/acfByID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the autocorrelation by unit (ID) — acfByID","text":"data.table estimated autocorrelations ID lag","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/acfByID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the autocorrelation by unit (ID) — acfByID","text":"","code":"## example 1 dat <- data.table::data.table(   x = sin(1:30),   time = 1:30,   id = 1) acfByID(\"x\", \"time\", \"id\", data = dat) #>        id Variable   Lag AutoCorrelation #>     <num>   <char> <int>           <num> #>  1:     1        x     0       1.0000000 #>  2:     1        x     1       0.5272823 #>  3:     1        x     2      -0.3846405 #>  4:     1        x     3      -0.8936820 #>  5:     1        x     4      -0.5734476 #>  6:     1        x     5       0.2329966 #>  7:     1        x     6       0.7732559 #>  8:     1        x     7       0.5874209 #>  9:     1        x     8      -0.1029345 #> 10:     1        x     9      -0.6451019 #> 11:     1        x    10      -0.5718883  ## example 2 dat2 <- data.table::data.table(   x = c(sin(1:30), sin((1:30)/10)),   time = c(1:30, 1:30),   id = rep(1:2, each = 30)) dat2$x[4] <- NA  res <- acfByID(\"x\", \"time\", \"id\", data = dat2, na.function = \"na.approx\")  ggplot2::ggplot(res, ggplot2::aes(factor(Lag), AutoCorrelation)) +   ggplot2::geom_boxplot()   ## clean up rm(dat, dat2, res)"},{"path":"https://joshuawiley.com/multilevelTools/reference/dot-summary.ID.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a Variable in a Long Dataset by ID — .summary.ID","title":"Summarize a Variable in a Long Dataset by ID — .summary.ID","text":"Summarize Variable Long Dataset ID","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/dot-summary.ID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a Variable in a Long Dataset by ID — .summary.ID","text":"","code":".summary.ID(data, var, idvar, CI = 0.95, robust = FALSE)"},{"path":"https://joshuawiley.com/multilevelTools/reference/dot-summary.ID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a Variable in a Long Dataset by ID — .summary.ID","text":"data data.table object, long format var character string, name variable summarize idvar character string, name grouping variable CI numeric value, confidence interval use. Default .95. robust logical. Default FALSE. TRUE, function use median estimate. FALSE, function use mean estimate.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/dot-summary.ID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a Variable in a Long Dataset by ID — .summary.ID","text":"data.table object mean/median, lower limit, upper limit variable   specified var level grouping variable specified idvar.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/evaluateLags.html","id":null,"dir":"Reference","previous_headings":"","what":"Create lag variables and evaluate models with different number of lags — evaluateLags","title":"Create lag variables and evaluate models with different number of lags — evaluateLags","text":"function creates desired number lags tests consecutive models model lags (lag 0), lag 0 + lag1, etc. reports model performance. helps evaluate many lags needed.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/evaluateLags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create lag variables and evaluate models with different number of lags — evaluateLags","text":"","code":"evaluateLags(formula, lagvar, nlags = 0L, idvar, data, ...)"},{"path":"https://joshuawiley.com/multilevelTools/reference/evaluateLags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create lag variables and evaluate models with different number of lags — evaluateLags","text":"formula character string giving lmer() formula use base. variable tested lags gets added fixed effects , currently. lagvar character string giving name variable test lags . nlags integer (e.g., 0L, 3L) giving number lags test. Defaults 0L really . Must positive integer. idvar character string giving name o ID variable. data data.table dataset ideally least data.frame. ... Additional arguments passed lmer, used control model fitting.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/evaluateLags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create lag variables and evaluate models with different number of lags — evaluateLags","text":"Currently linear mixed effects models allowed.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/evaluateLags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create lag variables and evaluate models with different number of lags — evaluateLags","text":"","code":"## these examples are slow to run data(aces_daily, package = \"JWileymisc\")  evaluateLags(  \"NegAff ~ Female + Age + BornAUS + (1 | UserID)\",  \"STRESS\",  4L,  \"UserID\",  aces_daily) #>      Lag  Model Estimator N_Obs     N_Groups      AIC      BIC        LL  LLDF #>    <int> <char>    <char> <num>       <char>    <num>    <num>     <num> <num> #> 1:     0 merMod        ML  5372 UserID (190) 6751.190 6797.313 -3368.595     7 #> 2:     1 merMod        ML  5372 UserID (190) 6681.458 6734.169 -3332.729     8 #> 3:     2 merMod        ML  5372 UserID (190) 6648.660 6707.960 -3315.330     9 #> 4:     3 merMod        ML  5372 UserID (190) 6638.343 6704.233 -3309.172    10 #> 5:     4 merMod        ML  5372 UserID (190) 6640.292 6712.771 -3309.146    11 #>        Sigma MarginalR2 ConditionalR2 MarginalF2 ConditionalF2 #>        <num>      <num>         <num>      <num>         <num> #> 1: 0.4301553  0.2941101     0.5707243  0.4166516      1.329505 #> 2: 0.4276613  0.3233266     0.5801990  0.4778178      1.382081 #> 3: 0.4264497  0.3399432     0.5867621  0.5150211      1.419913 #> 4: 0.4260388  0.3483062     0.5903241  0.5344629      1.440954 #> 5: 0.4260312  0.3478455     0.5901544  0.5333790      1.439943 #>                                                                                                        Formula #>                                                                                                         <char> #> 1:                                                     NegAff ~ Female + Age + BornAUS + (1 | UserID) + STRESS #> 2:                                        NegAff ~ Female + Age + BornAUS + (1 | UserID) + STRESS + STRESSLag1 #> 3:                           NegAff ~ Female + Age + BornAUS + (1 | UserID) + STRESS + STRESSLag1 + STRESSLag2 #> 4:              NegAff ~ Female + Age + BornAUS + (1 | UserID) + STRESS + STRESSLag1 + STRESSLag2 + STRESSLag3 #> 5: NegAff ~ Female + Age + BornAUS + (1 | UserID) + STRESS + STRESSLag1 + STRESSLag2 + STRESSLag3 + STRESSLag4  # \\donttest{  ## not run, more complex example with random slope, fails to converge evaluateLags(  \"NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID)\",  \"STRESS\",  5L,  \"UserID\",  aces_daily) #> Warning: Model failed to converge with max|grad| = 0.00302696 (tol = 0.002, component 1) #>      Lag  Model Estimator N_Obs     N_Groups      AIC      BIC        LL  LLDF #>    <int> <char>    <char> <num>       <char>    <num>    <num>     <num> <num> #> 1:     0 merMod        ML  5144 UserID (190) 5903.510 5962.420 -2942.755     9 #> 2:     1 merMod        ML  5144 UserID (190) 5837.591 5903.046 -2908.795    10 #> 3:     2 merMod        ML  5144 UserID (190) 5816.798 5888.799 -2897.399    11 #> 4:     3 merMod        ML  5144 UserID (190) 5806.522 5885.069 -2891.261    12 #> 5:     4 merMod        ML  5144 UserID (190) 5808.423 5893.515 -2891.211    13 #> 6:     5 merMod        ML  5144 UserID (190) 5810.158 5901.796 -2891.079    14 #>        Sigma MarginalR2 ConditionalR2 MarginalF2 ConditionalF2 #>        <num>      <num>         <num>      <num>         <num> #> 1: 0.4021802  0.2441862     0.5872656  0.3230772      1.422865 #> 2: 0.4001612  0.2785727     0.5956186  0.3861410      1.472913 #> 3: 0.3994679  0.2943976     0.6000910  0.4172287      1.500569 #> 4: 0.3990020  0.3040614     0.6039227  0.4369085      1.524760 #> 5: 0.3989923  0.3033384     0.6036954  0.4354171      1.523311 #> 6: 0.3989851  0.3044128     0.6041170  0.4376342      1.525999 #>                                                                                                                              Formula #>                                                                                                                               <char> #> 1:                                                                  NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS #> 2:                                                     NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 #> 3:                                        NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 + STRESSLag2 #> 4:                           NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 + STRESSLag2 + STRESSLag3 #> 5:              NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 + STRESSLag2 + STRESSLag3 + STRESSLag4 #> 6: NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 + STRESSLag2 + STRESSLag3 + STRESSLag4 + STRESSLag5  ## use different control to fit model and now converges strictControl <- lme4::lmerControl(optCtrl = list(    algorithm = \"NLOPT_LN_NELDERMEAD\",    xtol_abs = 1e-10,    ftol_abs = 1e-10)) evaluateLags(  \"NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID)\",  \"STRESS\",  5L,  \"UserID\",  aces_daily, control = strictControl) #>      Lag  Model Estimator N_Obs     N_Groups      AIC      BIC        LL  LLDF #>    <int> <char>    <char> <num>       <char>    <num>    <num>     <num> <num> #> 1:     0 merMod        ML  5144 UserID (190) 5903.510 5962.420 -2942.755     9 #> 2:     1 merMod        ML  5144 UserID (190) 5837.591 5903.046 -2908.795    10 #> 3:     2 merMod        ML  5144 UserID (190) 5816.798 5888.799 -2897.399    11 #> 4:     3 merMod        ML  5144 UserID (190) 5806.522 5885.069 -2891.261    12 #> 5:     4 merMod        ML  5144 UserID (190) 5808.423 5893.515 -2891.211    13 #> 6:     5 merMod        ML  5144 UserID (190) 5810.158 5901.796 -2891.079    14 #>        Sigma MarginalR2 ConditionalR2 MarginalF2 ConditionalF2 #>        <num>      <num>         <num>      <num>         <num> #> 1: 0.4021799  0.2441830     0.5872689  0.3230717      1.422885 #> 2: 0.4001612  0.2785749     0.5956152  0.3861453      1.472892 #> 3: 0.3994694  0.2944043     0.6000779  0.4172423      1.500487 #> 4: 0.3990019  0.3040583     0.6039258  0.4369019      1.524779 #> 5: 0.3989926  0.3033362     0.6036964  0.4354127      1.523318 #> 6: 0.3989852  0.3044130     0.6041160  0.4376347      1.525992 #>                                                                                                                              Formula #>                                                                                                                               <char> #> 1:                                                                  NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS #> 2:                                                     NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 #> 3:                                        NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 + STRESSLag2 #> 4:                           NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 + STRESSLag2 + STRESSLag3 #> 5:              NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 + STRESSLag2 + STRESSLag3 + STRESSLag4 #> 6: NegAff ~ Female + Age + BornAUS + (1 + STRESS | UserID) + STRESS + STRESSLag1 + STRESSLag2 + STRESSLag3 + STRESSLag4 + STRESSLag5 # }"},{"path":"https://joshuawiley.com/multilevelTools/reference/iccMixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Intraclass Correlation Coefficient (ICC) from Mixed Models — iccMixed","title":"Intraclass Correlation Coefficient (ICC) from Mixed Models — iccMixed","text":"function estimates ICC mixed effects models estimated using lme4.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/iccMixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intraclass Correlation Coefficient (ICC) from Mixed Models — iccMixed","text":"","code":"iccMixed(dv, id, data, family = c(\"gaussian\", \"binomial\"))"},{"path":"https://joshuawiley.com/multilevelTools/reference/iccMixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intraclass Correlation Coefficient (ICC) from Mixed Models — iccMixed","text":"dv character string giving variable name dependent variable. id character vector length one giving ID variable(s).  Can one. data data.table containing variables used formula.  required argument. data.frame, silently coerce data.table. data.table data.frame, attempt coerce, message. family character vector giving family use model.  Currently supports “gaussian” “binomial”.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/iccMixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intraclass Correlation Coefficient (ICC) from Mixed Models — iccMixed","text":"data table ICCs","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/iccMixed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intraclass Correlation Coefficient (ICC) from Mixed Models — iccMixed","text":"details, see Campbell, M. K., Mollison, J., Grimshaw, J. M. (2001) <doi:10.1002/1097-0258(20010215)20:3 \"Cluster trials implementation research: estimation intracluster correlation coefficients sample size.\"","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/iccMixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intraclass Correlation Coefficient (ICC) from Mixed Models — iccMixed","text":"","code":"iccMixed(\"mpg\", \"cyl\", mtcars) #>         Var    Sigma       ICC #>      <char>    <num>     <num> #> 1:      cyl 33.19401 0.7617095 #> 2: Residual 10.38430 0.2382905 iccMixed(\"mpg\", \"cyl\", data.table::as.data.table(mtcars)) #>         Var    Sigma       ICC #>      <char>    <num>     <num> #> 1:      cyl 33.19401 0.7617095 #> 2: Residual 10.38430 0.2382905 iccMixed(\"mpg\", \"cyl\", data.table::as.data.table(mtcars), family = \"gaussian\") #>         Var    Sigma       ICC #>      <char>    <num>     <num> #> 1:      cyl 33.19401 0.7617095 #> 2: Residual 10.38430 0.2382905 iccMixed(\"mpg\", c(\"cyl\", \"am\"), data.table::as.data.table(mtcars)) #>         Var     Sigma        ICC #>      <char>     <num>      <num> #> 1:      cyl 26.532017 0.68284241 #> 2:       am  2.921697 0.07519438 #> 3: Residual  9.401542 0.24196321 iccMixed(\"am\", \"cyl\", data.table::as.data.table(mtcars), family = \"binomial\") #>         Var     Sigma       ICC #>      <char>     <num>     <num> #> 1:      cyl 0.9467022 0.2234596 #> 2: Residual 3.2898681 0.7765404"},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDecompose.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean decomposition of a variable by group(s) — meanDecompose","title":"Mean decomposition of a variable by group(s) — meanDecompose","text":"function decomposes variable long data set grouping factors, ID. multiple grouping factors listed, decomposition order left right. Residuals lowest level returned.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDecompose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean decomposition of a variable by group(s) — meanDecompose","text":"","code":"meanDecompose(formula, data)"},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDecompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean decomposition of a variable by group(s) — meanDecompose","text":"formula formula variables used analysis. form: variable ~ groupingfactors. data data table data frame containing variables used formula.  required argument.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDecompose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean decomposition of a variable by group(s) — meanDecompose","text":"list data tables means residuals","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDecompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean decomposition of a variable by group(s) — meanDecompose","text":"","code":"meanDecompose(mpg ~ vs, data = mtcars) #> $`mpg by vs` #>       vs        X #>    <num>    <num> #> 1:     0 16.61667 #> 2:     1 24.55714 #>  #> $`mpg by residual` #>              X #>          <num> #>  1:  4.3833333 #>  2:  4.3833333 #>  3: -1.7571429 #>  4: -3.1571429 #>  5:  2.0833333 #>  6: -6.4571429 #>  7: -2.3166667 #>  8: -0.1571429 #>  9: -1.7571429 #> 10: -5.3571429 #> 11: -6.7571429 #> 12: -0.2166667 #> 13:  0.6833333 #> 14: -1.4166667 #> 15: -6.2166667 #> 16: -6.2166667 #> 17: -1.9166667 #> 18:  7.8428571 #> 19:  5.8428571 #> 20:  9.3428571 #> 21: -3.0571429 #> 22: -1.1166667 #> 23: -1.4166667 #> 24: -3.3166667 #> 25:  2.5833333 #> 26:  2.7428571 #> 27:  9.3833333 #> 28:  5.8428571 #> 29: -0.8166667 #> 30:  3.0833333 #> 31: -1.6166667 #> 32: -3.1571429 #>              X #>  meanDecompose(mpg ~ vs + cyl, data = mtcars) #> $`mpg by vs` #>       vs        X #>    <num>    <num> #> 1:     0 16.61667 #> 2:     1 24.55714 #>  #> $`mpg by vs & cyl` #>       vs   cyl         X #>    <num> <num>     <num> #> 1:     0     6  3.950000 #> 2:     1     4  2.172857 #> 3:     1     6 -5.432143 #> 4:     0     8 -1.516667 #> 5:     0     4  9.383333 #>  #> $`mpg by residual` #>              X #>          <num> #>  1:  0.4333333 #>  2:  0.4333333 #>  3: -3.9300000 #>  4:  2.2750000 #>  5:  3.6000000 #>  6: -1.0250000 #>  7: -0.8000000 #>  8: -2.3300000 #>  9: -3.9300000 #> 10:  0.0750000 #> 11: -1.3250000 #> 12:  1.3000000 #> 13:  2.2000000 #> 14:  0.1000000 #> 15: -4.7000000 #> 16: -4.7000000 #> 17: -0.4000000 #> 18:  5.6700000 #> 19:  3.6700000 #> 20:  7.1700000 #> 21: -5.2300000 #> 22:  0.4000000 #> 23:  0.1000000 #> 24: -1.8000000 #> 25:  4.1000000 #> 26:  0.5700000 #> 27:  0.0000000 #> 28:  3.6700000 #> 29:  0.7000000 #> 30: -0.8666667 #> 31: -0.1000000 #> 32: -5.3300000 #>              X #>   ## Example plotting the results tmp <- meanDecompose(Sepal.Length ~ Species, data = iris) do.call(ggpubr::ggarrange, c(lapply(names(tmp), function(x) {   plot(JWileymisc::testDistribution(tmp[[x]]$X), plot = FALSE, varlab = x)$Density }), ncol = 1))   rm(tmp)"},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDeviations.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the mean and deviations from mean — meanDeviations","title":"Function to calculate the mean and deviations from mean — meanDeviations","text":"Tiny helper function calculate mean deviations mean, returned list. Works nicely data.table calculate within variable.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDeviations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the mean and deviations from mean — meanDeviations","text":"","code":"meanDeviations(x, na.rm = TRUE)"},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDeviations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the mean and deviations from mean — meanDeviations","text":"x vector, appropriate mean function. na.rm logical, whether remove missing .  Defaults TRUE.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDeviations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the mean and deviations from mean — meanDeviations","text":"list mean (first element) deviations   mean (second element).","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/meanDeviations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate the mean and deviations from mean — meanDeviations","text":"","code":"## simple example showing what it does meanDeviations(1:10) #> [[1]] #> [1] 5.5 #>  #> [[2]] #>  [1] -4.5 -3.5 -2.5 -1.5 -0.5  0.5  1.5  2.5  3.5  4.5 #>   ## example use case, applied to a data.table library(data.table) d <- as.data.table(iris) d[, c(\"BSepal.Length\", \"WSepal.Length\") := meanDeviations(Sepal.Length),   by = Species] #>      Sepal.Length Sepal.Width Petal.Length Petal.Width   Species BSepal.Length #>             <num>       <num>        <num>       <num>    <fctr>         <num> #>   1:          5.1         3.5          1.4         0.2    setosa         5.006 #>   2:          4.9         3.0          1.4         0.2    setosa         5.006 #>   3:          4.7         3.2          1.3         0.2    setosa         5.006 #>   4:          4.6         3.1          1.5         0.2    setosa         5.006 #>   5:          5.0         3.6          1.4         0.2    setosa         5.006 #>  ---                                                                           #> 146:          6.7         3.0          5.2         2.3 virginica         6.588 #> 147:          6.3         2.5          5.0         1.9 virginica         6.588 #> 148:          6.5         3.0          5.2         2.0 virginica         6.588 #> 149:          6.2         3.4          5.4         2.3 virginica         6.588 #> 150:          5.9         3.0          5.1         1.8 virginica         6.588 #>      WSepal.Length #>              <num> #>   1:         0.094 #>   2:        -0.106 #>   3:        -0.306 #>   4:        -0.406 #>   5:        -0.006 #>  ---               #> 146:         0.112 #> 147:        -0.288 #> 148:        -0.088 #> 149:        -0.388 #> 150:        -0.688 str(d) #> Classes ‘data.table’ and 'data.frame':\t150 obs. of  7 variables: #>  $ Sepal.Length : num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ... #>  $ Sepal.Width  : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ... #>  $ Petal.Length : num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ... #>  $ Petal.Width  : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ... #>  $ Species      : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ BSepal.Length: num  5.01 5.01 5.01 5.01 5.01 ... #>  $ WSepal.Length: num  0.094 -0.106 -0.306 -0.406 -0.006 ... #>  - attr(*, \".internal.selfref\")=<externalptr>   rm(d)"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelCompare.merMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two lmer models — modelCompare.merMod","title":"Compare two lmer models — modelCompare.merMod","text":"function provides fit statistics effect sizes model comparisons.  models must nested.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelCompare.merMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two lmer models — modelCompare.merMod","text":"","code":"# S3 method for class 'merMod' modelCompare(model1, model2, ...)"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelCompare.merMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two lmer models — modelCompare.merMod","text":"model1 model estimated lmer. model2 model estimated lmer. ... Additional arguments, currently used included match generic.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelCompare.merMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two lmer models — modelCompare.merMod","text":"data table fit indices model comparing models .","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelCompare.merMod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compare two lmer models — modelCompare.merMod","text":"estimating marginal conditional R-squared values,   see: Nakagawa, S. Schielzeth, H. (2013). general simple method   obtaining R2 generalized linear mixed-effects models.   Methods Ecology Evolution, 4(2), 133-142. well :   Johnson, P. C. (2014). Extension Nakagawa & Schielzeth's R2GLMM   random slopes models. Methods Ecology Evolution, 5(9), 944-946.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelCompare.merMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two lmer models — modelCompare.merMod","text":"","code":"library(JWileymisc) data(aces_daily, package = \"JWileymisc\") m1 <- lme4::lmer(PosAff ~ STRESS + (1 + STRESS | UserID),   data = aces_daily) m2 <- lme4::lmer(PosAff ~ STRESS + (1 | UserID),   data = aces_daily) m3 <- lme4::lmer(PosAff ~ STRESS + Female + (1 | UserID),   data = aces_daily)  modelCompare(m1, m2) #> $Comparison #>         Model Estimator N_Obs     N_Groups        AIC        BIC         LL #>        <char>    <char> <num>       <char>      <num>      <num>      <num> #> 1:    Model 1      REML  6399 UserID (191) 13385.5617 13412.6173 -6688.7809 #> 2:    Model 2      REML  6399 UserID (191) 13184.7623 13225.3457 -6586.3812 #> 3: Difference               0               -200.7994  -187.2716   102.3997 #>     LLDF       Sigma  MarginalR2 ConditionalR2  MarginalF2 ConditionalF2 #>    <num>       <num>       <num>         <num>       <num>         <num> #> 1:     4  0.65017805 0.142930809     0.6191536 0.166766944    1.62573070 #> 2:     6  0.63112686 0.148011774     0.6381639 0.173725140    1.76368250 #> 3:     2 -0.01905119 0.005080965     0.0190103 0.005963656    0.05253844 #>        Chi2            P #>       <num>        <num> #> 1:       NA           NA #> 2:       NA           NA #> 3: 204.7994 3.375832e-45 #>  #> attr(,\"class\") #> [1] \"modelCompare.merMod\" \"modelCompare\"        modelCompare(m2, m3) #> When using REML, the fixed effects structure must be identical, #> but was different. Refitting with ML. #> $Comparison #>         Model Estimator N_Obs     N_Groups          AIC          BIC #>        <char>    <char> <num>       <char>        <num>        <num> #> 1:    Model 1        ML  6399 UserID (191) 13372.308546 13399.364134 #> 2:    Model 2        ML  6399 UserID (191) 13373.859321 13407.678806 #> 3: Difference               0                  1.550775     8.314672 #>               LL  LLDF         Sigma  MarginalR2 ConditionalR2  MarginalF2 #>            <num> <num>         <num>       <num>         <num>       <num> #> 1: -6682.1542731     4  6.501264e-01 0.143317066  0.6182064065 0.167293009 #> 2: -6681.9296605     5  6.501263e-01 0.145209578  0.6185439889 0.169877404 #> 3:     0.2246126     1 -1.366298e-07 0.001892512  0.0003375823 0.002214008 #>    ConditionalF2      Chi2         P #>            <num>     <num>     <num> #> 1:  1.6192162915        NA        NA #> 2:  1.6215342552        NA        NA #> 3:  0.0008849837 0.4492251 0.5027032 #>  #> attr(,\"class\") #> [1] \"modelCompare.merMod\" \"modelCompare\"         rm(m1, m2, m3)"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.lme.html","id":null,"dir":"Reference","previous_headings":"","what":"modelDiagnostics method for lme objects — modelDiagnostics.lme","title":"modelDiagnostics method for lme objects — modelDiagnostics.lme","text":"function creates number diagnostics lme models.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.lme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modelDiagnostics method for lme objects — modelDiagnostics.lme","text":"","code":"# S3 method for class 'lme' modelDiagnostics(   object,   ev.perc = 0.001,   robust = FALSE,   distr = \"normal\",   standardized = TRUE,   ... )"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.lme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modelDiagnostics method for lme objects — modelDiagnostics.lme","text":"object fitted model object  class lme. ev.perc real number 0 1 indicating proportion theoretical distribution beyond values considered extreme values (possible outliers). Defaults .001. robust Whether use robust mean standard deviation estimates normal distribution distr character string given assumed distribution. Passed testDistribution. Defaults “normal”. standardized logical whether use standardized pearson residuals. Defaults TRUE generally possible may depend method. ... Additional arguments, passed residualDiagnostics.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.lme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modelDiagnostics method for lme objects — modelDiagnostics.lme","text":"logical (.modelDiagnostics)   modelDiagnostics object (list)   .modelDiagnostics   modelDiagnostics.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.lme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modelDiagnostics method for lme objects — modelDiagnostics.lme","text":"","code":"library(JWileymisc) sleep[1,1] <- NA m <- nlme::lme(extra ~ group, data = sleep,  random = ~ 1 | ID, na.action = \"na.omit\")   md <- modelDiagnostics(m, ev.perc = .1)  md$extremeValues #>    extra     ID Index                     EffectType #>    <num> <fctr> <int>                         <char> #> 1:   0.0      9     9                      Residuals #> 2:  -0.1      5    15                      Residuals #> 3:   4.6      9    19                      Residuals #> 4:   3.4      6     6 Random Effect ID : (Intercept) #> 5:   3.7      7     7 Random Effect ID : (Intercept) #> 6:   4.4      6    16 Random Effect ID : (Intercept) #> 7:   5.5      7    17 Random Effect ID : (Intercept)   plot(md)     data(aces_daily, package = \"JWileymisc\") m <- nlme::lme(PosAff ~ STRESS, data = aces_daily,   random = ~ 1 + STRESS | UserID, na.action = \"na.omit\") md <- modelDiagnostics(m, ev.perc = .001) md$extremeValues #>       PosAff UserID Index                        EffectType #>        <num>  <int> <int>                            <char> #>  1: 2.018930     19   643                         Residuals #>  2: 4.647537     22   736                         Residuals #>  3: 4.379594     22   737                         Residuals #>  4: 4.285682     51  1759                         Residuals #>  5: 5.000000     52  1819                         Residuals #>  6: 4.593965     53  1838                         Residuals #>  7: 5.000000     53  1841                         Residuals #>  8: 3.679191     56  1934                         Residuals #>  9: 3.499317     69  2371                         Residuals #> 10: 1.333848     75  2580                         Residuals #> 11: 4.200560     78  2688                         Residuals #> 12: 1.000000     81  2805                         Residuals #> 13: 1.723817     83  2884                         Residuals #> 14: 4.702814     88  3018                         Residuals #> 15: 4.982255     97  3328                         Residuals #> 16: 4.851732     97  3329                         Residuals #> 17: 4.697991     97  3330                         Residuals #> 18: 5.000000    107  3675                         Residuals #> 19: 1.173068    113  3902                         Residuals #> 20: 1.000000    115  3954                         Residuals #> 21: 1.041260    119  4100                         Residuals #> 22: 4.713139    127  4357                         Residuals #> 23: 4.054051    141  4834                         Residuals #> 24: 3.975565    141  4835                         Residuals #> 25: 3.989508    141  4836                         Residuals #> 26: 4.278470    141  4844                         Residuals #> 27: 4.447151    147  5079                         Residuals #> 28: 1.079654    155  5341                         Residuals #> 29: 5.000000    155  5358                         Residuals #> 30: 4.660743    160  5520                         Residuals #> 31: 1.342503    163  5626                         Residuals #> 32: 4.706810    173  5944                         Residuals #> 33: 4.194950    180  6212                         Residuals #> 34: 4.258350    191  6568                         Residuals #> 35: 5.000000    191  6569                         Residuals #> 36: 4.701488    123  4219 Multivariate Random Effect UserID #> 37: 3.942647    123  4220 Multivariate Random Effect UserID #> 38: 3.841534    123  4221 Multivariate Random Effect UserID #> 39: 3.072598    123  4222 Multivariate Random Effect UserID #> 40: 4.165724    123  4223 Multivariate Random Effect UserID #> 41: 2.573955    123  4224 Multivariate Random Effect UserID #> 42: 1.871370    123  4225 Multivariate Random Effect UserID #> 43: 4.497994    123  4226 Multivariate Random Effect UserID #> 44: 2.207134    123  4227 Multivariate Random Effect UserID #> 45: 4.370643    123  4228 Multivariate Random Effect UserID #> 46: 1.713198    123  4229 Multivariate Random Effect UserID #> 47: 3.786528    123  4230 Multivariate Random Effect UserID #> 48: 4.702243    123  4231 Multivariate Random Effect UserID #> 49: 2.262491    123  4232 Multivariate Random Effect UserID #> 50: 5.000000    123  4234 Multivariate Random Effect UserID #> 51: 2.392975    123  4235 Multivariate Random Effect UserID #> 52: 3.588502    123  4236 Multivariate Random Effect UserID #> 53: 3.446311    123  4237 Multivariate Random Effect UserID #> 54: 2.832955    123  4238 Multivariate Random Effect UserID #> 55: 3.671293    123  4239 Multivariate Random Effect UserID #> 56: 4.893790    123  4240 Multivariate Random Effect UserID #> 57: 4.633870    123  4242 Multivariate Random Effect UserID #>       PosAff UserID Index                        EffectType plot(md)        m <- nlme::lme(extra ~ 1, data = sleep, random = ~ 1 | ID/group,   na.action = \"na.omit\")  md <- modelDiagnostics(m, ev.perc = .1) md$extremeValues #>    extra     ID  group Index                     EffectType #>    <num> <fctr> <fctr> <int>                         <char> #> 1:  -1.6      2      1     2                      Residuals #> 2:   0.0      9      1     9                      Residuals #> 3:   5.5      7      2    17                      Residuals #> 4:   4.6      9      2    19                      Residuals #> 5:   3.4      6      1     6 Random Effect ID : (Intercept) #> 6:   3.7      7      1     7 Random Effect ID : (Intercept) #> 7:   4.4      6      2    16 Random Effect ID : (Intercept) #> 8:   5.5      7      2    17 Random Effect ID : (Intercept) plot(md)     rm(m, md, sleep)"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.merMod.html","id":null,"dir":"Reference","previous_headings":"","what":"modelDiagnostics method for merMod objects — modelDiagnostics.merMod","title":"modelDiagnostics method for merMod objects — modelDiagnostics.merMod","text":"function creates number diagnostics merMod models.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.merMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modelDiagnostics method for merMod objects — modelDiagnostics.merMod","text":"","code":"# S3 method for class 'merMod' modelDiagnostics(   object,   ev.perc = 0.001,   robust = FALSE,   distr = \"normal\",   standardized = TRUE,   ... )"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.merMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modelDiagnostics method for merMod objects — modelDiagnostics.merMod","text":"object fitted model object, either class merMod lme4 package merModLmerTest lmerTest package. ev.perc real number 0 1 indicating proportion theoretical distribution beyond values considered extreme values (possible outliers). Defaults .001. robust Whether use robust mean standard deviation estimates normal distribution distr character string given assumed distribution. Passed testDistribution. Defaults “normal”. standardized logical whether use standardized residuals. Defaults TRUE generally possible may depend method. ... Additional arguments, passed residualDiagnostics.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.merMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modelDiagnostics method for merMod objects — modelDiagnostics.merMod","text":"logical (.modelDiagnostics)   modelDiagnostics object (list)   .modelDiagnostics   modelDiagnostics.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelDiagnostics.merMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modelDiagnostics method for merMod objects — modelDiagnostics.merMod","text":"","code":"library(JWileymisc) sleep[1,1] <- NA m <- lme4::lmer(extra ~ group + (1 | ID), data = sleep)  md <- modelDiagnostics(m, ev.perc = .1) md$extremeValues #>    extra     ID Index                     EffectType #>    <num> <fctr> <int>                         <char> #> 1:   0.0      9     9                      Residuals #> 2:  -0.1      5    15                      Residuals #> 3:   4.6      9    19                      Residuals #> 4:   3.4      6     6 Random Effect ID : (Intercept) #> 5:   3.7      7     7 Random Effect ID : (Intercept) #> 6:   4.4      6    16 Random Effect ID : (Intercept) #> 7:   5.5      7    17 Random Effect ID : (Intercept) class(md) #> [1] \"modelDiagnostics.merMod\" \"modelDiagnostics\"         plot(md)     data(aces_daily, package = \"JWileymisc\") m <- lme4::lmer(PosAff ~ STRESS + (1 + STRESS | UserID), data = aces_daily) md <- modelDiagnostics(m, ev.perc = .1)  #  gm1 <- lme4::glmer(cbind(incidence, size - incidence) ~ period + (1 | herd), #    data = lme4::cbpp, family = binomial) # modelDiagnostics(gm1) ## should be an error  rm(m, md, sleep)"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelPerformance.merMod.html","id":null,"dir":"Reference","previous_headings":"","what":"modelPerformance method for merMod objects — modelPerformance.merMod","title":"modelPerformance method for merMod objects — modelPerformance.merMod","text":"pseudo R2 cluster, squared correlation observed predicted values cluster unit returned.  overall model, marginal conditional R2 calculated described references.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelPerformance.merMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modelPerformance method for merMod objects — modelPerformance.merMod","text":"","code":"# S3 method for class 'merMod' modelPerformance(object, ...)"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelPerformance.merMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modelPerformance method for merMod objects — modelPerformance.merMod","text":"object model lmer. ... Additional arguments, currently used.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelPerformance.merMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modelPerformance method for merMod objects — modelPerformance.merMod","text":"named vector marginal conditional R2 values,   CLUSTER = FALSE, otherwise, data table pseudo R2   cluster unit.  list data.table following elements: Model character string indicating model type, merMod Estimator character string indicating whether model estimated REML ML N_Obs number observations N_Groups character string indicating number unique units grouping/clustering variable. AIC Akaike Information Criterion BIC Bayesian Information Criterion LL log likelihood LLDF log likelihood degrees freedom Sigma Residual standard deviation MarginalR2 sample variance explained fixed effects ConditionalR2 sample variance explained fixed random effects MarginalF2 Cohen's F2 effect size R2 / (1 - R2) based Marginal R2 ConditionalF2 Cohen's F2 effect size R2 / (1 - R2) based Conditional R2","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelPerformance.merMod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"modelPerformance method for merMod objects — modelPerformance.merMod","text":"estimating marginal conditional R-squared values,   see:   Nakagawa, S. Schielzeth, H. (2013) <doi:10.1111/j.2041-210x.2012.00261.x>   \"general simple method obtaining R2 generalized linear mixed-effects models\"   also:   Johnson, P. C. (2014) <doi:10.1111/2041-210X.12225>   \"Extension Nakagawa & Schielzeth's R2GLMM random slopes models\"","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelPerformance.merMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modelPerformance method for merMod objects — modelPerformance.merMod","text":"","code":"library(JWileymisc) data(aces_daily, package = \"JWileymisc\") m1 <- lme4::lmer(PosAff ~ 1 + (1 | UserID),   data = aces_daily) modelPerformance(m1) #> $Performance #>     Model Estimator N_Obs     N_Groups      AIC      BIC        LL  LLDF #>    <char>    <char> <num>       <char>    <num>    <num>     <num> <num> #> 1: merMod      REML  6399 UserID (191) 14800.56 14820.85 -7397.281     3 #>        Sigma MarginalR2 ConditionalR2 MarginalF2 ConditionalF2 #>        <num>      <num>         <num>      <num>         <num> #> 1: 0.7273136          0     0.5431473          0       1.18889 #>  #> attr(,\"class\") #> [1] \"modelPerformance.merMod\" \"modelPerformance\"         m1 <- lme4::lmer(PosAff ~ STRESS + (1 + STRESS | UserID),   data = aces_daily) modelPerformance(m1) #> $Performance #>     Model Estimator N_Obs     N_Groups      AIC      BIC        LL  LLDF #>    <char>    <char> <num>       <char>    <num>    <num>     <num> <num> #> 1: merMod      REML  6399 UserID (191) 13184.76 13225.35 -6586.381     6 #>        Sigma MarginalR2 ConditionalR2 MarginalF2 ConditionalF2 #>        <num>      <num>         <num>      <num>         <num> #> 1: 0.6311269  0.1480118     0.6381639  0.1737251      1.763683 #>  #> attr(,\"class\") #> [1] \"modelPerformance.merMod\" \"modelPerformance\"         rm(m1)"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelTest.merMod.html","id":null,"dir":"Reference","previous_headings":"","what":"estimate detailed results per variable and effect sizes for both fixed and random effects from lmer models — modelTest.merMod","title":"estimate detailed results per variable and effect sizes for both fixed and random effects from lmer models — modelTest.merMod","text":"function extends current drop1 method merMod class objects lme4 package. default method able drop fixed random effects .","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelTest.merMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimate detailed results per variable and effect sizes for both fixed and random effects from lmer models — modelTest.merMod","text":"","code":"# S3 method for class 'merMod' modelTest(object, method = c(\"Wald\", \"profile\", \"boot\"), control, ...)"},{"path":"https://joshuawiley.com/multilevelTools/reference/modelTest.merMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimate detailed results per variable and effect sizes for both fixed and random effects from lmer models — modelTest.merMod","text":"object merMod class object, fitted result lmer. method character vector indicating types confidence intervals calculate. One “Wald”, “profile”, “boot”. control lmerControl() results used control models estimated updating. ... Additional arguments passed confint","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelTest.merMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"estimate detailed results per variable and effect sizes for both fixed and random effects from lmer models — modelTest.merMod","text":"moment, function aimed lmer models features glmer nlmer models. primary motivation provide way provide overall test whether variable “matters”.  multilevel data, variable may included fixed random effects. provide overall test whether matters requires jointly testing fixed random effects. also needed provide overall effect size. function works generating formula one specific variable “term” removed levels. model fit reduced formula compared full model passed . complex operation mixed effects models several reasons. Firstly, R default mechanism dropping terms fixed random portions. Secondly, mixed effects models accomodate types models. example, model includes random slope random intercept, random slope dropped, random effects, point, lmer glmer run model. theoretically possible instead fit model using lm glm becomes complex certain model comparisons calculations currently implemented. Marginal conditional R2 values calculated term, used also calculate something akin f-squared effect size. new function important carefully evaluate results check accurate sensible. Check accuracy viewing model formulae reduced model checking indeed accurate. terms checking whether result sensible , large literature difficulty interpretting main effect tests presence interactions. challenging detect interactions, especially ones made outside R formulae, terms tested. However, likely make sense report results dropping main effect keeping interaction term, present interpret caution.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/modelTest.merMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"estimate detailed results per variable and effect sizes for both fixed and random effects from lmer models — modelTest.merMod","text":"","code":"## these examples are slow to run library(JWileymisc) m1 <- lme4::lmer(extra ~ group + (1 | ID), data = sleep, REML=FALSE) modelTest(m1) #> $FixedEffects #> Key: <Term> #>           Term   Est   Type         LL       UL         Pval #>         <char> <num> <char>      <num>    <num>        <num> #> 1: (Intercept)  0.75     FE -0.3663711 1.866371 1.879250e-01 #> 2:      group2  1.58     FE  0.8567759 2.303224 1.853388e-05 #>  #> $RandomEffects #> Key: <Term> #>                 Term       Est   Type    LL    UL #>               <char>     <num> <char> <num> <num> #> 1: sd_(Intercept)|ID 1.6010934     RE    NA    NA #> 2:             sigma 0.8251061     RE    NA    NA #>  #> $EffectSizes #>    Variable Estimator N_Obs N_Groups       AIC       BIC       LL  LLDF #>      <char>    <char> <num>   <char>     <num>     <num>    <num> <num> #> 1:    group               0          -8.414884 -7.419152 5.207442     1 #>         Sigma MarginalR2 ConditionalR2 MarginalF2 ConditionalF2     Chi2 #>         <num>      <num>         <num>      <num>         <num>    <num> #> 1: -0.5637784  0.1613328     0.3226657  0.1923682      1.833431 10.41488 #>              P     FE     RE              Formula   Type #>          <num> <lgcl> <lgcl>               <char> <fctr> #> 1: 0.001250037   TRUE  FALSE extra ~ 1 + (1 | ID)  Fixed #>  #> $OverallModel #> $Performance #>     Model Estimator N_Obs N_Groups      AIC      BIC        LL  LLDF     Sigma #>    <char>    <char> <num>   <char>    <num>    <num>     <num> <num>     <num> #> 1: merMod        ML    20  ID (10) 78.50469 82.48762 -35.25235     4 0.8251061 #>    MarginalR2 ConditionalR2 MarginalF2 ConditionalF2 #>         <num>         <num>      <num>         <num> #> 1:  0.1613328     0.8240099  0.1923682      4.682139 #>  #> attr(,\"class\") #> [1] \"modelPerformance.merMod\" \"modelPerformance\"        #>  #> attr(,\"class\") #> [1] \"modelTest.merMod\" \"modelTest\"         # \\donttest{ data(aces_daily, package = \"JWileymisc\")  strictControl <- lme4::lmerControl(optCtrl = list(    algorithm = \"NLOPT_LN_NELDERMEAD\",    xtol_abs = 1e-10,    ftol_abs = 1e-10))  m1 <- lme4::lmer(NegAff ~ STRESS + (1 + STRESS | UserID),   data = aces_daily,   control = strictControl) modelTest(m1, method = \"profile\") #> Computing profile confidence intervals ... #> Parameters and CIs are based on REML,  #> but modelTests requires ML not REML fit for comparisons,  #> and these are used in effect sizes. Refitting. #> $FixedEffects #> Key: <Term> #>           Term       Est   Type        LL        UL  Pval #>         <char>     <num> <char>     <num>     <num> <num> #> 1: (Intercept) 1.2357015     FE 1.2024389 1.2692167     0 #> 2:      STRESS 0.1183131     FE 0.1068207 0.1296297     0 #>  #> $RandomEffects #> Key: <Term> #>                             Term        Est   Type         LL         UL #>                           <char>      <num> <char>      <num>      <num> #> 1: cor_STRESS.(Intercept)|UserID 0.47072409     RE 0.28594506 0.63920509 #> 2:         sd_(Intercept)|UserID 0.20585894     RE 0.17824126 0.23575940 #> 3:              sd_STRESS|UserID 0.06769381     RE 0.05902194 0.07720673 #> 4:                         sigma 0.41789606     RE 0.41053223 0.42549600 #>  #> $EffectSizes #>    Variable Estimator N_Obs N_Groups        AIC        BIC        LL  LLDF #>      <char>    <char> <num>   <char>      <num>      <num>     <num> <num> #> 1:   STRESS               0          -2701.2231 -2680.9361 1353.6115     3 #> 2:   STRESS               0           -538.1871  -524.6625  271.0936     2 #>          Sigma  MarginalR2 ConditionalR2  MarginalF2 ConditionalF2      Chi2 #>          <num>       <num>         <num>       <num>         <num>     <num> #> 1: -0.10192041  0.22744094    0.11496664  0.29439942    0.25608128 2707.2231 #> 2: -0.02275066 -0.04844019    0.01044792 -0.06270096    0.02327211  542.1871 #>                P     FE     RE                            Formula #>            <num> <lgcl> <lgcl>                             <char> #> 1:  0.000000e+00   TRUE   TRUE          NegAff ~ 1 + (1 | UserID) #> 2: 1.843162e-118  FALSE   TRUE NegAff ~ 1 + STRESS + (1 | UserID) #>              Type #>            <fctr> #> 1: Fixed + Random #> 2:         Random #>  #> $OverallModel #> $Performance #>     Model Estimator N_Obs     N_Groups      AIC      BIC        LL  LLDF #>    <char>    <char> <num>       <char>    <num>    <num>     <num> <num> #> 1: merMod        ML  6389 UserID (191) 7702.815 7743.389 -3845.407     6 #>        Sigma MarginalR2 ConditionalR2 MarginalF2 ConditionalF2 #>        <num>      <num>         <num>      <num>         <num> #> 1: 0.4179028  0.2274409     0.5510541  0.2943994       1.22744 #>  #> attr(,\"class\") #> [1] \"modelPerformance.merMod\" \"modelPerformance\"        #>  #> attr(,\"class\") #> [1] \"modelTest.merMod\" \"modelTest\"         m2 <- lme4::lmer(NegAff ~ STRESS + I(STRESS^2) + (1 + STRESS | UserID),   data = aces_daily, control = strictControl)  ## might normally use more bootstraps but keeping low for faster run modelTest(m2, method = \"boot\", nsim = 100) #> Computing bootstrap confidence intervals ... #> Error in eval(expr, p): object 'strictControl' not found # }"},{"path":"https://joshuawiley.com/multilevelTools/reference/nEffective.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the effective sample size from longitudinal data — nEffective","title":"Estimate the effective sample size from longitudinal data — nEffective","text":"function estimates (approximate) effective sample size.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/nEffective.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the effective sample size from longitudinal data — nEffective","text":"","code":"nEffective(n, k, icc, dv, id, data, family = c(\"gaussian\", \"binomial\"))"},{"path":"https://joshuawiley.com/multilevelTools/reference/nEffective.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the effective sample size from longitudinal data — nEffective","text":"n number unique/indepedent units observation k (average) number observations per unit icc estimated ICC.  missing, estimate (requires family argument correctly specified). dv character string giving variable name dependent variable. id character vector length one giving ID variable. data data.table containing variables used formula.  required argument. data.frame, silently coerce data.table. data.table data.frame, attempt coerce, message. family character vector giving family use model.  Currently supports “gaussian” “binomial”.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/nEffective.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the effective sample size from longitudinal data — nEffective","text":"data.table including effective sample size.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/nEffective.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate the effective sample size from longitudinal data — nEffective","text":"details, see Campbell, M. K., Mollison, J., Grimshaw, J. M. (2001) <doi:10.1002/1097-0258(20010215)20:3 \"Cluster trials implementation research: estimation intracluster correlation coefficients sample size.\"","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/nEffective.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the effective sample size from longitudinal data — nEffective","text":"","code":"## example where n, k, and icc are estimated from the data ## provided, partly using iccMixed function nEffective(dv = \"mpg\", id = \"cyl\", data = mtcars) #>                     Type         N #>                   <char>     <num> #> 1: Effective Sample Size  3.826291 #> 2:     Independent Units  3.000000 #> 3:    Total Observations 32.000000  ## example where n, k, and icc are known (or being 'set') ## useful for sensitivity analyses nEffective(n = 60, k = 10, icc = .6) #>                     Type      N #>                   <char>  <num> #> 1: Effective Sample Size  93.75 #> 2:     Independent Units  60.00 #> 3:    Total Observations 600.00"},{"path":"https://joshuawiley.com/multilevelTools/reference/omegaSEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate multilevel omega reliability — omegaSEM","title":"Calculate multilevel omega reliability — omegaSEM","text":"function uses multilevel structural equation modelling calculate within reliability using coefficient omega.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/omegaSEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate multilevel omega reliability — omegaSEM","text":"","code":"omegaSEM(items, id, data, savemodel = FALSE)"},{"path":"https://joshuawiley.com/multilevelTools/reference/omegaSEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate multilevel omega reliability — omegaSEM","text":"items character vector giving variables map items scale. Note reverse scored prior running function. id character string giving name variable indicates rows dataset belong person group multilevel analysis. data data table data frame used analysis. savemodel logical value indicating whether underlying model saved returned. Defaults FALSE.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/omegaSEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate multilevel omega reliability — omegaSEM","text":"list two elements, first, “Results” contains  estimates coefficient omega within level.  next element, “Fit” contains entire fitted model lavaan,  savemodel = TRUE.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/omegaSEM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate multilevel omega reliability — omegaSEM","text":"Geldhof, G. J., Preacher, K. J., & Zyphur, M. J. (2014) <doi:10.1037/a0032138> \"Reliability estimation multilevel confirmatory factor analysis framework\"","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/omegaSEM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate multilevel omega reliability — omegaSEM","text":"","code":"data(aces_daily, package = \"JWileymisc\")   omegaSEM(     items = c(\"COPEPrb\", \"COPEPrc\", \"COPEExp\"),     id = \"UserID\",     data = aces_daily,     savemodel = FALSE) #> $Results #>            label   est ci.lower ci.upper #> 25  omega_within 0.719    0.697    0.740 #> 28 omega_between 0.908    0.884    0.933 #>"},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.lme.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Diagnostics for an lme model — plot.modelDiagnostics.lme","title":"Plot Diagnostics for an lme model — plot.modelDiagnostics.lme","text":"function creates number diagnostic plots lme models.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.lme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Diagnostics for an lme model — plot.modelDiagnostics.lme","text":"","code":"# S3 method for class 'modelDiagnostics.lme' plot(x, y, plot = TRUE, ask = TRUE, ncol = 1, nrow = 1, ...)"},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.lme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Diagnostics for an lme model — plot.modelDiagnostics.lme","text":"x fitted model object lme(). y Included match generic. used. plot logical value whether plot results simply return graaphical  objects. ask logical whether ask changing plots. applies interactive environments. ncol number columns use plots. Defaults 1. nrow number rows use plots. Defaults 1. ... Included match generic. used.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.lme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Diagnostics for an lme model — plot.modelDiagnostics.lme","text":"list including plots residuals,   residuals versus fitted values, one list   plots random effects","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.lme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Diagnostics for an lme model — plot.modelDiagnostics.lme","text":"","code":"library(JWileymisc) sleep[1,1] <- NA m <- nlme::lme(extra ~ group, data = sleep, random = ~ 1 | ID, na.action = \"na.omit\")  md <- modelDiagnostics(m, ev.perc = .1) md$extremeValues #>    extra     ID Index                     EffectType #>    <num> <fctr> <int>                         <char> #> 1:   0.0      9     9                      Residuals #> 2:  -0.1      5    15                      Residuals #> 3:   4.6      9    19                      Residuals #> 4:   3.4      6     6 Random Effect ID : (Intercept) #> 5:   3.7      7     7 Random Effect ID : (Intercept) #> 6:   4.4      6    16 Random Effect ID : (Intercept) #> 7:   5.5      7    17 Random Effect ID : (Intercept)  plot(md)     data(aces_daily, package = \"JWileymisc\") m <- nlme::lme(PosAff ~ STRESS, data = aces_daily,   random = ~ 1 + STRESS | UserID, na.action = \"na.omit\")  md <- modelDiagnostics(m, ev.perc = .001) md$extremeValues #>       PosAff UserID Index                        EffectType #>        <num>  <int> <int>                            <char> #>  1: 2.018930     19   643                         Residuals #>  2: 4.647537     22   736                         Residuals #>  3: 4.379594     22   737                         Residuals #>  4: 4.285682     51  1759                         Residuals #>  5: 5.000000     52  1819                         Residuals #>  6: 4.593965     53  1838                         Residuals #>  7: 5.000000     53  1841                         Residuals #>  8: 3.679191     56  1934                         Residuals #>  9: 3.499317     69  2371                         Residuals #> 10: 1.333848     75  2580                         Residuals #> 11: 4.200560     78  2688                         Residuals #> 12: 1.000000     81  2805                         Residuals #> 13: 1.723817     83  2884                         Residuals #> 14: 4.702814     88  3018                         Residuals #> 15: 4.982255     97  3328                         Residuals #> 16: 4.851732     97  3329                         Residuals #> 17: 4.697991     97  3330                         Residuals #> 18: 5.000000    107  3675                         Residuals #> 19: 1.173068    113  3902                         Residuals #> 20: 1.000000    115  3954                         Residuals #> 21: 1.041260    119  4100                         Residuals #> 22: 4.713139    127  4357                         Residuals #> 23: 4.054051    141  4834                         Residuals #> 24: 3.975565    141  4835                         Residuals #> 25: 3.989508    141  4836                         Residuals #> 26: 4.278470    141  4844                         Residuals #> 27: 4.447151    147  5079                         Residuals #> 28: 1.079654    155  5341                         Residuals #> 29: 5.000000    155  5358                         Residuals #> 30: 4.660743    160  5520                         Residuals #> 31: 1.342503    163  5626                         Residuals #> 32: 4.706810    173  5944                         Residuals #> 33: 4.194950    180  6212                         Residuals #> 34: 4.258350    191  6568                         Residuals #> 35: 5.000000    191  6569                         Residuals #> 36: 4.701488    123  4219 Multivariate Random Effect UserID #> 37: 3.942647    123  4220 Multivariate Random Effect UserID #> 38: 3.841534    123  4221 Multivariate Random Effect UserID #> 39: 3.072598    123  4222 Multivariate Random Effect UserID #> 40: 4.165724    123  4223 Multivariate Random Effect UserID #> 41: 2.573955    123  4224 Multivariate Random Effect UserID #> 42: 1.871370    123  4225 Multivariate Random Effect UserID #> 43: 4.497994    123  4226 Multivariate Random Effect UserID #> 44: 2.207134    123  4227 Multivariate Random Effect UserID #> 45: 4.370643    123  4228 Multivariate Random Effect UserID #> 46: 1.713198    123  4229 Multivariate Random Effect UserID #> 47: 3.786528    123  4230 Multivariate Random Effect UserID #> 48: 4.702243    123  4231 Multivariate Random Effect UserID #> 49: 2.262491    123  4232 Multivariate Random Effect UserID #> 50: 5.000000    123  4234 Multivariate Random Effect UserID #> 51: 2.392975    123  4235 Multivariate Random Effect UserID #> 52: 3.588502    123  4236 Multivariate Random Effect UserID #> 53: 3.446311    123  4237 Multivariate Random Effect UserID #> 54: 2.832955    123  4238 Multivariate Random Effect UserID #> 55: 3.671293    123  4239 Multivariate Random Effect UserID #> 56: 4.893790    123  4240 Multivariate Random Effect UserID #> 57: 4.633870    123  4242 Multivariate Random Effect UserID #>       PosAff UserID Index                        EffectType plot(md$modelDiagnostics[[2]][[2]])  plot(md, ncol = 2, nrow = 2)   plot(md, ncol = 2, nrow = 3)   rm(m, md, sleep)"},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.merMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Diagnostics for an lmer model — plot.modelDiagnostics.merMod","title":"Plot Diagnostics for an lmer model — plot.modelDiagnostics.merMod","text":"function creates number diagnostic plots lmer models.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.merMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Diagnostics for an lmer model — plot.modelDiagnostics.merMod","text":"","code":"# S3 method for class 'modelDiagnostics.merMod' plot(x, y, plot = TRUE, ask = TRUE, ncol = 1, nrow = 1, ...)"},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.merMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Diagnostics for an lmer model — plot.modelDiagnostics.merMod","text":"x fitted model object lmer(). y Included match generic. used. plot logical value whether plot results simply return graaphical  objects. ask logical whether ask changing plots. applies interactive environments. ncol number columns use plots. Defaults 1. nrow number rows use plots. Defaults 1. ... Included match generic. used.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.merMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Diagnostics for an lmer model — plot.modelDiagnostics.merMod","text":"list including plots residuals,   residuals versus fitted values, one list   plots random effects","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/plot.modelDiagnostics.merMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Diagnostics for an lmer model — plot.modelDiagnostics.merMod","text":"","code":"library(JWileymisc) sleep[1,1] <- NA m <- lme4::lmer(extra ~ group + (1 | ID), data = sleep)  md <- modelDiagnostics(m, ev.perc = .1) md$extremeValues #>    extra     ID Index                     EffectType #>    <num> <fctr> <int>                         <char> #> 1:   0.0      9     9                      Residuals #> 2:  -0.1      5    15                      Residuals #> 3:   4.6      9    19                      Residuals #> 4:   3.4      6     6 Random Effect ID : (Intercept) #> 5:   3.7      7     7 Random Effect ID : (Intercept) #> 6:   4.4      6    16 Random Effect ID : (Intercept) #> 7:   5.5      7    17 Random Effect ID : (Intercept)  data(aces_daily, package = \"JWileymisc\") m <- lme4::lmer(PosAff ~ STRESS + (1 + STRESS | UserID), data = aces_daily)  md <- modelDiagnostics(m, ev.perc = .001) md$extremeValues #>       PosAff UserID Index                        EffectType #>        <num>  <int> <int>                            <char> #>  1: 2.018930     19   643                         Residuals #>  2: 4.647537     22   736                         Residuals #>  3: 4.379594     22   737                         Residuals #>  4: 4.285682     51  1759                         Residuals #>  5: 5.000000     52  1819                         Residuals #>  6: 4.593965     53  1838                         Residuals #>  7: 5.000000     53  1841                         Residuals #>  8: 3.679191     56  1934                         Residuals #>  9: 3.499317     69  2371                         Residuals #> 10: 1.333848     75  2580                         Residuals #> 11: 4.200560     78  2688                         Residuals #> 12: 1.000000     81  2805                         Residuals #> 13: 1.723817     83  2884                         Residuals #> 14: 4.702814     88  3018                         Residuals #> 15: 4.982255     97  3328                         Residuals #> 16: 4.851732     97  3329                         Residuals #> 17: 4.697991     97  3330                         Residuals #> 18: 5.000000    107  3675                         Residuals #> 19: 1.173068    113  3902                         Residuals #> 20: 1.000000    115  3954                         Residuals #> 21: 1.041260    119  4100                         Residuals #> 22: 4.713139    127  4357                         Residuals #> 23: 4.054051    141  4834                         Residuals #> 24: 3.975565    141  4835                         Residuals #> 25: 3.989508    141  4836                         Residuals #> 26: 4.278470    141  4844                         Residuals #> 27: 4.447151    147  5079                         Residuals #> 28: 1.079654    155  5341                         Residuals #> 29: 5.000000    155  5358                         Residuals #> 30: 4.660743    160  5520                         Residuals #> 31: 1.342503    163  5626                         Residuals #> 32: 4.706810    173  5944                         Residuals #> 33: 4.194950    180  6212                         Residuals #> 34: 4.258350    191  6568                         Residuals #> 35: 5.000000    191  6569                         Residuals #> 36: 4.701488    123  4219 Multivariate Random Effect UserID #> 37: 3.942647    123  4220 Multivariate Random Effect UserID #> 38: 3.841534    123  4221 Multivariate Random Effect UserID #> 39: 3.072598    123  4222 Multivariate Random Effect UserID #> 40: 4.165724    123  4223 Multivariate Random Effect UserID #> 41: 2.573955    123  4224 Multivariate Random Effect UserID #> 42: 1.871370    123  4225 Multivariate Random Effect UserID #> 43: 4.497994    123  4226 Multivariate Random Effect UserID #> 44: 2.207134    123  4227 Multivariate Random Effect UserID #> 45: 4.370643    123  4228 Multivariate Random Effect UserID #> 46: 1.713198    123  4229 Multivariate Random Effect UserID #> 47: 3.786528    123  4230 Multivariate Random Effect UserID #> 48: 4.702243    123  4231 Multivariate Random Effect UserID #> 49: 2.262491    123  4232 Multivariate Random Effect UserID #> 50: 5.000000    123  4234 Multivariate Random Effect UserID #> 51: 2.392975    123  4235 Multivariate Random Effect UserID #> 52: 3.588502    123  4236 Multivariate Random Effect UserID #> 53: 3.446311    123  4237 Multivariate Random Effect UserID #> 54: 2.832955    123  4238 Multivariate Random Effect UserID #> 55: 3.671293    123  4239 Multivariate Random Effect UserID #> 56: 4.893790    123  4240 Multivariate Random Effect UserID #> 57: 4.633870    123  4242 Multivariate Random Effect UserID #>       PosAff UserID Index                        EffectType plot(md$modelDiagnostics[[2]][[2]])  plot(md, ncol = 2, nrow = 2)   plot(md, ncol = 2, nrow = 3)   rm(m, md, sleep)"},{"path":"https://joshuawiley.com/multilevelTools/reference/ranef2long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ranef() output to long format — ranef2long","title":"Convert ranef() output to long format — ranef2long","text":"Convert ranef() output long format","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/ranef2long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ranef() output to long format — ranef2long","text":"","code":"ranef2long(x, idvar)  .re.data(d, i, idvar)"},{"path":"https://joshuawiley.com/multilevelTools/reference/ranef2long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ranef() output to long format — ranef2long","text":"x brmsfit object idvar character string specifying grouping variable name random effects. d ranef object integer, random effect pull ","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/ranef2long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ranef() output to long format — ranef2long","text":"data.table object random effects long format.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/ranefdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data and plots for brms random effect models — ranefdata","title":"Create data and plots for brms random effect models — ranefdata","text":"Create data plots brms random effect models","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/ranefdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data and plots for brms random effect models — ranefdata","text":"","code":"ranefdata(object, usevars, newdata, idvar, CI = 0.95, robust = FALSE)"},{"path":"https://joshuawiley.com/multilevelTools/reference/ranefdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data and plots for brms random effect models — ranefdata","text":"object brmsfit objectx usevars character vector random effects plot newdata data.table object data used generate random effects, used anchor random intercepts meaningful 0 point idvar character string specifying grouping variable name random effects CI numeric value 0 1 specifying interval use. Defaults 0.95. robust logical value indicating whether use robust estimates . Defaults FALSE. Passed posterior_summary .summary.ID.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/ranefdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data and plots for brms random effect models — ranefdata","text":"list following components: * plot: list ggplot objects * plotdat: list data.table objects data used generate plots * relong: data.table object random effects long format * yhat: list data.table objects expected values random effects * usevars: character vector random effects plot * idvar: character string specifying grouping variable name random effects","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/ranefdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create data and plots for brms random effect models — ranefdata","text":"","code":"# \\donttest{ if (FALSE) { library(data.table) library(brms) library(ggpubr)  current.seed <- .Random.seed set.seed(12345) nGroups <- 100 nObs <- 20 theta.location <- matrix(rnorm(nGroups * 2), nrow = nGroups, ncol = 2) theta.location[, 1] <- theta.location[, 1] - mean(theta.location[, 1]) theta.location[, 2] <- theta.location[, 2] - mean(theta.location[, 2]) theta.location[, 1] <- theta.location[, 1] / sd(theta.location[, 1]) theta.location[, 2] <- theta.location[, 2] / sd(theta.location[, 2]) theta.location <- theta.location %*% chol(matrix(c(1.5, -.25, -.25, .5^2), 2)) theta.location[, 1] <- theta.location[, 1] - 2.5 theta.location[, 2] <- theta.location[, 2] + 1  dmixed <- data.table(   x = rep(rep(0:1, each = nObs / 2), times = nGroups))   dmixed[, ID := rep(seq_len(nGroups), each = nObs)]    for (i in seq_len(nGroups)) {     dmixed[ID == i, y := rnorm(       n = nObs,       mean = theta.location[i, 1] + theta.location[i, 2] * x,       sd = exp(1 + theta.location[i, 1] + theta.location[i, 2] * x))       ]   }  ## note this model takes several minutes, even on a high performance machine ls.me <- brm(bf(   y ~ 1 + x + (1 + x | p | ID),   sigma ~ 1 + x + (1 + x | p | ID)),   family = \"gaussian\",   data = dmixed, seed = 1234,   silent = 2, refresh = 0, iter = 2000, warmup = 1000, thin = 1,   chains = 4L, cores = 4L)  out <- ranefdata(   ls.me,   newdata = data.table(ID = dmixed$ID[1], x = 0),    usevars = c(\"Intercept\", \"x\", \"sigma_Intercept\", \"sigma_x\"),   idvar = \"ID\")  do.call(ggarrange, c(out$replots, ncol=2,nrow=2)) do.call(ggarrange, c(out$scatterplots, ncol=2,nrow=3))  ## set seed back to what it was set.seed(current.seed)  ## cleanup rm(current.seed, nGroups, nObs, theta.location, dmixed, ls.me, out) } # }"},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.lme.html","id":null,"dir":"Reference","previous_headings":"","what":"residualDiagnostics methods for lme objects — residualDiagnostics.lme","title":"residualDiagnostics methods for lme objects — residualDiagnostics.lme","text":"residualDiagnostics methods lme objects","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.lme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"residualDiagnostics methods for lme objects — residualDiagnostics.lme","text":"","code":"# S3 method for class 'lme' residualDiagnostics(   object,   ev.perc = 0.001,   robust = FALSE,   distr = \"normal\",   standardized = TRUE,   cut = 8L,   quantiles = TRUE,   ... )"},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.lme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"residualDiagnostics methods for lme objects — residualDiagnostics.lme","text":"object object class lme. ev.perc extreme value percentile use. Defaults .001. robust logical value, whether use robust estimates . Defaults FALSE. distr character string specifying assumed distribution. Currently “normal”, future options may supported future. standardized logical value whether use standardized pearson residual values . Defaults TRUE. cut integer, many unique predicted values least predicted values treated continuously, otherwise treated discrete values. Defaults 8. quantiles logical whether calculate quantiles residuals.  Defaults TRUE. FALSE, calculate . based simple quantiles predicted value predicted values enough treated discretely. See cut argument. Otherwise based quantile regression. First trying smoothing splines, falling back linear quantil regression splines fail. may also want turn working well, value diagnostics. ... Additional arguments. currently used.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.lme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"residualDiagnostics methods for lme objects — residualDiagnostics.lme","text":"logical (.residualDiagnostics)   residualDiagnostics object (list)   .residualDiagnostics   residualDiagnostics.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.lme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"residualDiagnostics methods for lme objects — residualDiagnostics.lme","text":"","code":"library(JWileymisc) sleep[1,1] <- NA m <- nlme::lme(extra ~ group, data = sleep, random = ~ 1 | ID,   na.action = na.omit)   residualDiagnostics(m)$Residuals #>        Residuals  Predicted   isEV Index #>            <num>      <num> <fctr> <int> #>  1: -0.700128686 -0.9621668     No     2 #>  2:  0.021691421 -0.2197614     No     3 #>  3: -0.117253346 -1.0931795     No     4 #>  4:  0.658755591 -0.7001414     No     5 #>  5:  0.665700971  2.7935312     No     6 #>  6:  0.323895359  3.4049239     No     7 #>  7:  0.400316839  0.4353022     No     8 #>  8: -1.532411926  1.3960622     No     9 #>  9:  0.279433777  1.7454295     No    10 #> 10: -0.106066416  1.9966289     No    11 #> 11:  0.165397761  0.6493189     No    12 #> 12: -0.320216242  1.3917243     No    13 #> 13: -0.459161009  0.5183061     No    14 #> 14: -1.110119656  0.9113443     No    15 #> 15: -0.005506903  4.4050169     No    16 #> 16:  0.530821382  5.0164096     No    17 #> 17: -0.490424510  2.0467879     No    18 #> 18:  1.747982740  3.0075479     No    19 #> 19:  0.047292851  3.3569151     No    20  m <- nlme::lme(hp ~ mpg, data = mtcars, random = ~ 1 | cyl,   na.action = na.omit) residualDiagnostics(m)$Residuals #>       Residuals Predicted   isEV Index #>           <num>     <num> <fctr> <int> #>  1: -0.23664029 118.76861     No     1 #>  2: -0.23664029 118.76861     No     2 #>  3: -0.22511638 101.34160     No     3 #>  4: -0.18972936 117.03034     No     4 #>  5: -0.43428124 191.09211     No     5 #>  6: -0.71168060 131.37103     No     6 #>  7:  0.93880308 210.21303     No     7 #>  8: -0.87407610  94.38853     No     8 #>  9: -0.17114196 101.34160     No     9 #> 10: -0.09690578 126.59080     No    10 #> 11: -0.26109405 132.67473     No    11 #> 12: -0.56908306 201.08714     No    12 #> 13: -0.46353346 197.17604     No    13 #> 14: -0.70981586 206.30194     No    14 #> 15: -0.59806685 227.16112     No    15 #> 16: -0.32819477 227.16112     No    16 #> 17:  0.58090589 208.47477     No    17 #> 18:  0.17209140  59.62322     No    18 #> 19: -0.44028418  68.31455     No    19 #> 20:  0.32102019  53.10473     No    20 #> 21: -0.26962808 106.99096     No    21 #> 22: -1.48424891 204.99824     No    22 #> 23: -1.51943211 206.30194     No    23 #> 24:  0.82152575 214.55870     No    24 #> 25: -0.37564257 188.91928     No    25 #> 26: -0.42602300  81.78611     No    26 #> 27:  0.09619667  87.43547     No    27 #> 28:  1.20593552  68.31455     No    28 #> 29:  1.62747604 203.69454     No    29 #> 30:  1.36506772 124.41797     No    30 #> 31:  3.44974596 207.17107    Yes    31 #> 32:  0.04249069 107.42552     No    32 #>       Residuals Predicted   isEV Index  rm(m, sleep)"},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.merMod.html","id":null,"dir":"Reference","previous_headings":"","what":"residualDiagnostics methods for merMod objects — residualDiagnostics.merMod","title":"residualDiagnostics methods for merMod objects — residualDiagnostics.merMod","text":"residualDiagnostics methods merMod objects","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.merMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"residualDiagnostics methods for merMod objects — residualDiagnostics.merMod","text":"","code":"# S3 method for class 'merMod' residualDiagnostics(   object,   ev.perc = 0.001,   robust = FALSE,   distr = \"normal\",   standardized = TRUE,   cut = 8L,   quantiles = TRUE,   ... )"},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.merMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"residualDiagnostics methods for merMod objects — residualDiagnostics.merMod","text":"object object class merMod. Currently lmer() models supported. ev.perc extreme value percentile use. Defaults .001. robust logical value, whether use robust estimates . Defaults FALSE. distr character string specifying assumed distribution. Currently “normal”, may expand future glmer() models supported. standardized logical value whether use standardized residual values . Defaults TRUE. cut integer, many unique predicted values least predicted values treated continuously, otherwise treated discrete values. Defaults 8. quantiles logical whether calculate quantiles residuals.  Defaults TRUE. FALSE, calculate . based simple quantiles predicted value predicted values enough treated discretely. See cut argument. Otherwise based quantile regression. First trying smoothing splines, falling back linear quantil regression splines fail. may also want turn working well, value diagnostics. ... Additional arguments. currently used.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.merMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"residualDiagnostics methods for merMod objects — residualDiagnostics.merMod","text":"logical (.residualDiagnostics)   residualDiagnostics object (list)   .residualDiagnostics   residualDiagnostics.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/residualDiagnostics.merMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"residualDiagnostics methods for merMod objects — residualDiagnostics.merMod","text":"","code":"library(JWileymisc) sleep[1,1] <- NA m <- lme4::lmer(extra ~ group + (1 | ID), data = sleep)  residualDiagnostics(m)$Residuals #>        Residuals  Predicted   isEV Index #>            <num>      <num> <fctr> <int> #>  1: -0.700128956 -0.9621661     No     2 #>  2:  0.021690939 -0.2197610     No     3 #>  3: -0.117254135 -1.0931787     No     4 #>  4:  0.658754382 -0.7001407     No     5 #>  5:  0.665701421  2.7935304     No     6 #>  6:  0.323896367  3.4049228     No     7 #>  7:  0.400316373  0.4353024     No     8 #>  8: -1.532410421  1.3960619     No     9 #>  9:  0.279434030  1.7454290     No    10 #> 10: -0.106066615  1.9966292     No    11 #> 11:  0.165396845  0.6493196     No    12 #> 12: -0.320216425  1.3917247     No    13 #> 13: -0.459161498  0.5183069     No    14 #> 14: -1.110119449  0.9113449     No    15 #> 15: -0.005505897  4.4050160     No    16 #> 16:  0.530822260  5.0164084     No    17 #> 17: -0.490424247  2.0467880     No    18 #> 18:  1.747981709  3.0075476     No    19 #> 19:  0.047293317  3.3569147     No    20  #  gm1 <- lme4::glmer(cbind(incidence, size - incidence) ~ period + (1 | herd), #    data = lme4::cbpp, family = binomial) # residualDiagnostics(gm1) ## should be an error  rm(m, sleep)"},{"path":"https://joshuawiley.com/multilevelTools/reference/weighted.sma.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Simple Moving Average — weighted.sma","title":"Weighted Simple Moving Average — weighted.sma","text":"function estimates simple moving average specific window weights variety optional decays (e.g., exponential, linear, none). Whether omit missing data based missing threshold, proportion indicates tolerance. weighted proportion missing exceeds threshold, observvation missing, otherwise, missing data excluded weighted simple moving average calculated non missing data.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/weighted.sma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Simple Moving Average — weighted.sma","text":"","code":"weighted.sma(   x,   window,   decay = c(\"exponential\", \"linear\", \"none\"),   alpha,   missThreshold = 0 )"},{"path":"https://joshuawiley.com/multilevelTools/reference/weighted.sma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Simple Moving Average — weighted.sma","text":"x Time series data calculate weighted simple moving average. assumed data correct order time equally spaced. missing data filled NAs. window integer indicating size window use. window include current value. decay character string indicating type decay use weights. alpha optional value. needed decay = “none”, required exponential linear decay. exponential linear decay, alpha range 0 1. 0 result decay. missThreshold numeric value indicating proportion data can missing given window resulting simple moving average set missing. proportion weighted data, data points necessarily equally weighted.","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/weighted.sma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Simple Moving Average — weighted.sma","text":"numeric vector weighted simple moving averages","code":""},{"path":"https://joshuawiley.com/multilevelTools/reference/weighted.sma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Simple Moving Average — weighted.sma","text":"","code":"dweights <- expand.grid(   time = 0:10,   alpha = seq(0, 1, by = .1))  library(ggplot2)  ggplot(dweights, aes(time, (1 - alpha)^time, colour = factor(alpha))) +   geom_line() + geom_point() + theme_bw() +   scale_x_reverse() +   theme(legend.position = \"bottom\") +   ggtitle(\"Exponential Decay in Weights\")   ggplot(dweights, aes(time, pmax(1 - alpha * time, 0), colour = factor(alpha))) +   geom_line() + geom_point() + theme_bw() +   scale_x_reverse() +   theme(legend.position = \"bottom\") +   ggtitle(\"Linear Decay in Weights\")   weighted.sma(c(1, 2, 3, 4, 5),              window = 3L, decay = \"none\",              missThreshold = 0) #> [1] NA NA  2  3  4  weighted.sma(c(1, 2, 3, 4, 5),              window = 3L, decay = \"exponential\",              alpha = 0, missThreshold = 0) #> [1] NA NA  2  3  4  weighted.sma(c(1, 2, 3, 4, 5),              window = 3L, decay = \"linear\",              alpha = 0, missThreshold = 0) #> [1] NA NA  2  3  4  weighted.sma(c(1, 2, 3, 4, 5),              window = 3L, decay = \"exponential\",              alpha = .1, missThreshold = 0) #> [1]       NA       NA 2.070111 3.070111 4.070111  weighted.sma(c(1, 2, 3, 4, 5),              window = 3L, decay = \"exponential\",              alpha = .5, missThreshold = 0) #> [1]       NA       NA 2.428571 3.428571 4.428571  weighted.sma(c(1, 2, 3, 4, 5),              window = 3L, decay = \"linear\",              alpha = .1, missThreshold = 0) #> [1]       NA       NA 2.074074 3.074074 4.074074  weighted.sma(c(1, 2, 3, 4, 5),              window = 3L, decay = \"linear\",              alpha = .3, missThreshold = 0) #> [1]       NA       NA 2.285714 3.285714 4.285714  weighted.sma(c(1, NA, NA, 4, 5),              window = 4L, decay = \"exponential\",              alpha = .4, missThreshold = .4) #> [1]    NA    NA    NA    NA 4.625  ## clean up rm(dweights)"},{"path":[]},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"multilevelTools 0.2.0","text":"evaluateLags() function evaluate far back lags go improve model fit. ranefdata() function extract random effects brms model return plot . Designed make caterpilar plots posterior summaries.","code":""},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"multilevelTools 0.2.0","text":"Moved testthat 3rd edition. Updated GitHub actions","code":""},{"path":[]},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"bug-fixes-0-1-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"multilevelTools 0.1.3","text":"modelTest() longer fails models continuous x categorical interaction. Estimates dropping “simple” effect continuous variable still calculable, rest calculations still performed line simply set NA.","code":""},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"changes-0-1-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"multilevelTools 0.1.3","text":"moved testthat 3rd edition moved CI GitHub actions use preferably package website","code":""},{"path":[]},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"new-features-0-1-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"multilevelTools 0.1.2","text":"New weighted.sma function calculate weighted simple moving averages.","code":""},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"multileveltools-011","dir":"Changelog","previous_headings":"","what":"multilevelTools 0.1.1","title":"multilevelTools 0.1.1","text":"CRAN release: 2020-03-04","code":""},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"multilevelTools 0.1.1","text":"Beta methods support lme models, class lme residualDiagnostics() modelDiagnostics() planned future updates.","code":""},{"path":[]},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"multilevelTools 0.1.0","text":"Methods support lme4 models, class merMod modelTest(), modelDiagnostics(), APAStyler(). New vignette added showing sample use case package.","code":""},{"path":"https://joshuawiley.com/multilevelTools/news/index.html","id":"ported-features-0-1-0","dir":"Changelog","previous_headings":"","what":"Ported Features","title":"multilevelTools 0.1.0","text":"omegaSEM() Function calculates coefficient omega measuring internal consistency reliability. Works two level models returns within level omega values. R2.merMod() method calculate marginal conditional variance accounted model estimated lmer(). modelCompare.merMod() method compare two models estimated lmer() include significance tests effect sizes estimates variance explained. iccMixed() function calculate intraclass correlation coefficient using mixed effects models. Works either normally distributed outcomes binary outcomes, case latent variable estimate ICC computed. nEffective() Calculates effective sample size based number independent units, number observations per unit, intraclass correlation coefficient. acfByID() Calculates lagged autocorrelation variable ID variable returns data.table use, examination, summary, plotting meanDecompose() function added decompose multilevel repeated measures data means residuals. meanDeviations() simple function calculate means mean deviations, useful creating within versions variable data.table","code":""}]
